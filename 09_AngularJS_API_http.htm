<!DOCTYPE html>
<html class="ng-scope" ng-app="docsApp" ng-strict-di="" ng-controller="DocsController" lang="en"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><style type="text/css">@charset "UTF-8";[ng\:cloak],[ng-cloak],[data-ng-cloak],[x-ng-cloak],.ng-cloak,.x-ng-cloak,.ng-hide:not(.ng-hide-animate){display:none !important;}ng\:form{display:block;}.ng-animate-shim{visibility:hidden;}.ng-anchor{position:absolute;}</style>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="Description" content="AngularJS is what HTML would have been, had it been designed for building web-apps.
                 Declarative templates with data-binding, MVC, dependency injection and great
                 testability story all implemented with pure client-side JavaScript!">
  <meta name="fragment" content="!">
  <title class="ng-binding" ng-bind-template="AngularJS: API: $http">AngularJS: API: $http</title>

  <script src="09_AngularJS_API_http-Dateien/ga.js" async="" type="text/javascript"></script><script type="text/javascript">
    // dynamically add base tag as well as css and javascript files.
    // we can't add css/js the usual way, because some browsers (FF) eagerly prefetch resources
    // before the base attribute is added, causing 404 and terribly slow loading of the docs app.
    (function() {
      var indexFile = (location.pathname.match(/\/(index[^\.]*\.html)/) || ['', ''])[1],
          rUrl = /(#!\/|api|guide|misc|tutorial|error|index[^\.]*\.html).*$/,
          baseUrl = location.href.replace(rUrl, indexFile),
          production = location.hostname === 'docs.angularjs.org',
          headEl = document.getElementsByTagName('head')[0],
          sync = true;

      addTag('base', {href: baseUrl});


      addTag('link', {rel: 'stylesheet', href: 'components/bootstrap-3.1.1/css/bootstrap.min.css', type: 'text/css'});
      addTag('link', {rel: 'stylesheet', href: 'components/open-sans-fontface-1.0.4/open-sans.css', type: 'text/css'});
      addTag('link', {rel: 'stylesheet', href: 'css/prettify-theme.css', type: 'text/css'});
      addTag('link', {rel: 'stylesheet', href: 'css/docs.css', type: 'text/css'});
      addTag('link', {rel: 'stylesheet', href: 'css/animations.css', type: 'text/css'});
      

      addTag('script', {src: '//ajax.googleapis.com/ajax/libs/angularjs/1.5.8/angular.min.js' }, sync);
      addTag('script', {src: '//ajax.googleapis.com/ajax/libs/angularjs/1.5.8/angular-resource.min.js' }, sync);
      addTag('script', {src: '//ajax.googleapis.com/ajax/libs/angularjs/1.5.8/angular-route.min.js' }, sync);
      addTag('script', {src: '//ajax.googleapis.com/ajax/libs/angularjs/1.5.8/angular-cookies.min.js' }, sync);
      addTag('script', {src: '//ajax.googleapis.com/ajax/libs/angularjs/1.5.8/angular-sanitize.min.js' }, sync);
      addTag('script', {src: '//ajax.googleapis.com/ajax/libs/angularjs/1.5.8/angular-touch.min.js' }, sync);
      addTag('script', {src: '//ajax.googleapis.com/ajax/libs/angularjs/1.5.8/angular-animate.min.js' }, sync);
      addTag('script', {src: 'components/marked-0.3.5/lib/marked.js' }, sync);
      addTag('script', {src: 'js/angular-bootstrap/dropdown-toggle.min.js' }, sync);
      addTag('script', {src: 'components/lunr.js-0.5.12/lunr.min.js' }, sync);
      addTag('script', {src: 'components/google-code-prettify-1.0.1/src/prettify.js' }, sync);
      addTag('script', {src: 'components/google-code-prettify-1.0.1/src/lang-css.js' }, sync);
      addTag('script', {src: 'js/versions-data.js' }, sync);
      addTag('script', {src: 'js/pages-data.js' }, sync);
      addTag('script', {src: 'js/nav-data.js' }, sync);
      addTag('script', {src: 'js/docs.min.js' }, sync);
      

      function addTag(name, attributes, sync) {
        var el = document.createElement(name),
            attrName;

        for (attrName in attributes) {
          el.setAttribute(attrName, attributes[attrName]);
        }

        sync ? document.write(outerHTML(el)) : headEl.appendChild(el);
      }

      function outerHTML(node){
        // if IE, Chrome take the internal method otherwise build one
        return node.outerHTML || (
            function(n){
                var div = document.createElement('div'), h;
                div.appendChild(n);
                h = div.innerHTML;
                div = null;
                return h;
            })(node);
      }
    })();

    // GA asynchronous tracker
    var _gaq = _gaq || [];
    _gaq.push(['_setAccount', 'UA-8594346-3']);
    _gaq.push(['_setDomainName', '.angularjs.org']);

    (function() {
      var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
      ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
      var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
    })();
  </script><!-- base href="https://docs.angularjs.org/" --><link type="text/css" href="09_AngularJS_API_http-Dateien/bootstrap.css" rel="stylesheet"><link type="text/css" href="09_AngularJS_API_http-Dateien/open-sans.css" rel="stylesheet"><link type="text/css" href="09_AngularJS_API_http-Dateien/prettify-theme.css" rel="stylesheet"><link type="text/css" href="09_AngularJS_API_http-Dateien/docs.css" rel="stylesheet"><link type="text/css" href="09_AngularJS_API_http-Dateien/animations.css" rel="stylesheet"><script src="09_AngularJS_API_http-Dateien/angular.js"></script><script src="09_AngularJS_API_http-Dateien/angular-resource.js"></script><script src="09_AngularJS_API_http-Dateien/angular-route.js"></script><script src="09_AngularJS_API_http-Dateien/angular-cookies.js"></script><script src="09_AngularJS_API_http-Dateien/angular-sanitize.js"></script><script src="09_AngularJS_API_http-Dateien/angular-touch.js"></script><script src="09_AngularJS_API_http-Dateien/angular-animate.js"></script><script src="09_AngularJS_API_http-Dateien/marked.js"></script><script src="09_AngularJS_API_http-Dateien/dropdown-toggle.js"></script><script src="09_AngularJS_API_http-Dateien/lunr.js"></script><script src="09_AngularJS_API_http-Dateien/prettify.js"></script><script src="09_AngularJS_API_http-Dateien/lang-css.js"></script><script src="09_AngularJS_API_http-Dateien/versions-data.js"></script><script src="09_AngularJS_API_http-Dateien/pages-data.js"></script><script src="09_AngularJS_API_http-Dateien/nav-data.js"></script><script src="09_AngularJS_API_http-Dateien/docs.js"></script>
</head>
<body>
  <div id="wrapper">
    <header scroll-y-offset-element="" class="header header-fixed">
      <section class="navbar navbar-inverse docs-navbar-primary ng-scope" ng-controller="DocsSearchCtrl">
        <div class="container">
          <div class="row">
            <div class="col-md-9 header-branding">
              <a class="brand navbar-brand" href="http://angularjs.org/">
                <img src="09_AngularJS_API_http-Dateien/angularjs-for-header-only.svg" class="logo" alt="Link to Angular JS Homepage" ng-src="img/angularjs-for-header-only.svg" height="30" width="117">
              </a>
              <ul class="nav navbar-nav">
                <li class="divider-vertical"></li>
                <li><a href="http://angularjs.org/"><i class="icon-home icon-white"></i> Home</a></li>
                <li class="divider-vertical"></li>
                <li class="dropdown ng-isolate-scope">
                  <a aria-expanded="false" aria-haspopup="true" href="#" class="dropdown-toggle" data-toggle="dropdown">
                    <i class="icon-eye-open icon-white"></i> Learn <b class="caret"></b>
                  </a>
                  <ul class="dropdown-menu">
                    <li class="disabled"><a href="http://angularjs.org/">Why AngularJS?</a></li>
                    <li><a href="http://www.youtube.com/user/angularjs">Watch</a></li>
                    <li><a href="https://docs.angularjs.org/tutorial">Tutorial</a></li>
                    <li><a href="https://www.madewithangular.com/">Case Studies</a></li>
                    <li><a href="https://github.com/angular/angular-seed">Seed App project template</a></li>
                    <li><a href="https://docs.angularjs.org/misc/faq">FAQ</a></li>
                  </ul>
                </li>
                <li class="divider-vertical"></li>
                <li class="dropdown active ng-isolate-scope">
                  <a aria-expanded="false" aria-haspopup="true" href="#" class="dropdown-toggle" data-toggle="dropdown">
                    <i class="icon-book icon-white"></i> Develop <b class="caret"></b>
                  </a>
                  <ul class="dropdown-menu">
                    <li><a href="https://docs.angularjs.org/tutorial">Tutorial</a></li>
                    <li><a href="https://docs.angularjs.org/guide">Developer Guide</a></li>
                    <li><a href="https://docs.angularjs.org/api">API Reference</a></li>
                    <li><a href="https://docs.angularjs.org/error">Error Reference</a></li>
                    <li><a href="https://docs.angularjs.org/misc/contribute">Contribute</a></li>
                    <li><a href="http://code.angularjs.org/">Download</a></li>
                  </ul>
                </li>
                <li class="divider-vertical"></li>
                <li class="dropdown ng-isolate-scope">
                  <a aria-expanded="false" aria-haspopup="true" href="#" class="dropdown-toggle" data-toggle="dropdown">
                    <i class="icon-comment icon-white"></i> Discuss <b class="caret"></b>
                  </a>
                  <ul class="dropdown-menu">
                    <li><a href="http://blog.angularjs.org/">Blog</a></li>
                    <li><a href="http://groups.google.com/group/angular">Mailing List</a></li>
                    <li><a href="http://webchat.freenode.net/?channels=angularjs&amp;uio=d4">Chat Room</a></li>
                    <li class="divider"></li>
                    <li><a href="https://twitter.com/#%21/angularjs">Twitter</a></li>
                    <li><a href="https://plus.google.com/110323587230527980117">Google+</a></li>
                    <li class="divider"></li>
                    <li><a href="https://github.com/angular/angular.js">GitHub</a></li>
                    <li><a href="https://github.com/angular/angular.js/issues">Issue Tracker</a></li>
                  </ul>
                </li>
                <li class="divider-vertical"></li>
              </ul>
            </div>
            <form ng-class="{focus:focus}" class="navbar-search col-md-3 docs-search ng-pristine ng-valid" ng-submit="submit()">
              <span class="glyphicon glyphicon-search search-icon"></span>
              <input name="as_q" class="search-query ng-pristine ng-untouched ng-valid ng-empty" placeholder="Click or press / to search" ng-focus="focus=true" ng-blur="focus=false" ng-change="search(q)" ng-model="q" docs-search-input="" autocomplete="off" type="text">
            </form>
          </div>
        </div>
        <div class="search-results-container ng-hide" ng-show="hasResults">
          <div class="container">
            <div class="search-results-frame">
              <!-- ngRepeat: (key, value) in results track by key -->
            </div>
            <a href="" ng-click="hideResults()" class="search-close">
              <span class="glyphicon glyphicon-remove search-close-icon"></span> Close
            </a>
          </div>
        </div>
      </section>
      <section class="sup-header">
        <div class="container main-grid main-header-grid">
          <div class="grid-left">
            <div ng-controller="DocsVersionsCtrl" class="picker version-picker ng-scope">
              <select ng-options="v as ('v' + v.version + (v.isSnapshot ? ' (snapshot)' : '')) group by getGroupName(v) for v in docs_versions" ng-model="docs_version" ng-change="jumpToDocsVersion(docs_version)" class="docs-version-jump ng-pristine ng-untouched ng-valid ng-not-empty"><optgroup label="Latest"><option selected="selected" value="object:8" label="v1.5.9-build.4999 (snapshot)">v1.5.9-build.4999 (snapshot)</option><option value="object:24" label="v1.4.12">v1.4.12</option><option value="object:47" label="v1.3.20">v1.3.20</option><option value="object:93" label="v1.2.30">v1.2.30</option><option value="object:126" label="v1.1.5">v1.1.5</option><option value="object:132" label="v1.0.8">v1.0.8</option></optgroup><optgroup label="v1.5.x"><option value="object:9" label="v1.5.8">v1.5.8</option><option value="object:10" label="v1.5.7">v1.5.7</option><option value="object:11" label="v1.5.6">v1.5.6</option><option value="object:12" label="v1.5.5">v1.5.5</option><option value="object:13" label="v1.5.4">v1.5.4</option><option value="object:14" label="v1.5.3">v1.5.3</option><option value="object:15" label="v1.5.2">v1.5.2</option><option value="object:16" label="v1.5.1">v1.5.1</option><option value="object:17" label="v1.5.0">v1.5.0</option><option value="object:18" label="v1.5.0-rc.2">v1.5.0-rc.2</option><option value="object:19" label="v1.5.0-rc.1">v1.5.0-rc.1</option><option value="object:20" label="v1.5.0-rc.0">v1.5.0-rc.0</option><option value="object:21" label="v1.5.0-beta.2">v1.5.0-beta.2</option><option value="object:22" label="v1.5.0-beta.1">v1.5.0-beta.1</option><option value="object:23" label="v1.5.0-beta.0">v1.5.0-beta.0</option></optgroup><optgroup label="v1.4.x"><option value="object:25" label="v1.4.11">v1.4.11</option><option value="object:26" label="v1.4.10">v1.4.10</option><option value="object:27" label="v1.4.9">v1.4.9</option><option value="object:28" label="v1.4.8">v1.4.8</option><option value="object:29" label="v1.4.7">v1.4.7</option><option value="object:30" label="v1.4.6">v1.4.6</option><option value="object:31" label="v1.4.5">v1.4.5</option><option value="object:32" label="v1.4.4">v1.4.4</option><option value="object:33" label="v1.4.3">v1.4.3</option><option value="object:34" label="v1.4.2">v1.4.2</option><option value="object:35" label="v1.4.1">v1.4.1</option><option value="object:36" label="v1.4.0">v1.4.0</option><option value="object:37" label="v1.4.0-rc.2">v1.4.0-rc.2</option><option value="object:38" label="v1.4.0-rc.1">v1.4.0-rc.1</option><option value="object:39" label="v1.4.0-rc.0">v1.4.0-rc.0</option><option value="object:40" label="v1.4.0-beta.6">v1.4.0-beta.6</option><option value="object:41" label="v1.4.0-beta.5">v1.4.0-beta.5</option><option value="object:42" label="v1.4.0-beta.4">v1.4.0-beta.4</option><option value="object:43" label="v1.4.0-beta.3">v1.4.0-beta.3</option><option value="object:44" label="v1.4.0-beta.2">v1.4.0-beta.2</option><option value="object:45" label="v1.4.0-beta.1">v1.4.0-beta.1</option><option value="object:46" label="v1.4.0-beta.0">v1.4.0-beta.0</option></optgroup><optgroup label="v1.3.x"><option value="object:48" label="v1.3.19">v1.3.19</option><option value="object:49" label="v1.3.18">v1.3.18</option><option value="object:50" label="v1.3.17">v1.3.17</option><option value="object:51" label="v1.3.16">v1.3.16</option><option value="object:52" label="v1.3.15">v1.3.15</option><option value="object:53" label="v1.3.14">v1.3.14</option><option value="object:54" label="v1.3.13">v1.3.13</option><option value="object:55" label="v1.3.12">v1.3.12</option><option value="object:56" label="v1.3.11">v1.3.11</option><option value="object:57" label="v1.3.10">v1.3.10</option><option value="object:58" label="v1.3.9">v1.3.9</option><option value="object:59" label="v1.3.8">v1.3.8</option><option value="object:60" label="v1.3.7">v1.3.7</option><option value="object:61" label="v1.3.6">v1.3.6</option><option value="object:62" label="v1.3.5">v1.3.5</option><option value="object:63" label="v1.3.4">v1.3.4</option><option value="object:64" label="v1.3.3">v1.3.3</option><option value="object:65" label="v1.3.2">v1.3.2</option><option value="object:66" label="v1.3.1">v1.3.1</option><option value="object:67" label="v1.3.0">v1.3.0</option><option value="object:68" label="v1.3.0-rc.5">v1.3.0-rc.5</option><option value="object:69" label="v1.3.0-rc.4">v1.3.0-rc.4</option><option value="object:70" label="v1.3.0-rc.3">v1.3.0-rc.3</option><option value="object:71" label="v1.3.0-rc.2">v1.3.0-rc.2</option><option value="object:72" label="v1.3.0-rc.1">v1.3.0-rc.1</option><option value="object:73" label="v1.3.0-rc.0">v1.3.0-rc.0</option><option value="object:74" label="v1.3.0-beta.19">v1.3.0-beta.19</option><option value="object:75" label="v1.3.0-beta.18">v1.3.0-beta.18</option><option value="object:76" label="v1.3.0-beta.17">v1.3.0-beta.17</option><option value="object:77" label="v1.3.0-beta.16">v1.3.0-beta.16</option><option value="object:78" label="v1.3.0-beta.15">v1.3.0-beta.15</option><option value="object:79" label="v1.3.0-beta.14">v1.3.0-beta.14</option><option value="object:80" label="v1.3.0-beta.13">v1.3.0-beta.13</option><option value="object:81" label="v1.3.0-beta.12">v1.3.0-beta.12</option><option value="object:82" label="v1.3.0-beta.11">v1.3.0-beta.11</option><option value="object:83" label="v1.3.0-beta.10">v1.3.0-beta.10</option><option value="object:84" label="v1.3.0-beta.9">v1.3.0-beta.9</option><option value="object:85" label="v1.3.0-beta.8">v1.3.0-beta.8</option><option value="object:86" label="v1.3.0-beta.7">v1.3.0-beta.7</option><option value="object:87" label="v1.3.0-beta.6">v1.3.0-beta.6</option><option value="object:88" label="v1.3.0-beta.5">v1.3.0-beta.5</option><option value="object:89" label="v1.3.0-beta.4">v1.3.0-beta.4</option><option value="object:90" label="v1.3.0-beta.3">v1.3.0-beta.3</option><option value="object:91" label="v1.3.0-beta.2">v1.3.0-beta.2</option><option value="object:92" label="v1.3.0-beta.1">v1.3.0-beta.1</option></optgroup><optgroup label="v1.2.x"><option value="object:94" label="v1.2.29">v1.2.29</option><option value="object:95" label="v1.2.28">v1.2.28</option><option value="object:96" label="v1.2.27">v1.2.27</option><option value="object:97" label="v1.2.26">v1.2.26</option><option value="object:98" label="v1.2.25">v1.2.25</option><option value="object:99" label="v1.2.24">v1.2.24</option><option value="object:100" label="v1.2.23">v1.2.23</option><option value="object:101" label="v1.2.22">v1.2.22</option><option value="object:102" label="v1.2.21">v1.2.21</option><option value="object:103" label="v1.2.20">v1.2.20</option><option value="object:104" label="v1.2.19">v1.2.19</option><option value="object:105" label="v1.2.18">v1.2.18</option><option value="object:106" label="v1.2.17">v1.2.17</option><option value="object:107" label="v1.2.16">v1.2.16</option><option value="object:108" label="v1.2.15">v1.2.15</option><option value="object:109" label="v1.2.14">v1.2.14</option><option value="object:110" label="v1.2.13">v1.2.13</option><option value="object:111" label="v1.2.12">v1.2.12</option><option value="object:112" label="v1.2.11">v1.2.11</option><option value="object:113" label="v1.2.10">v1.2.10</option><option value="object:114" label="v1.2.9">v1.2.9</option><option value="object:115" label="v1.2.8">v1.2.8</option><option value="object:116" label="v1.2.7">v1.2.7</option><option value="object:117" label="v1.2.6">v1.2.6</option><option value="object:118" label="v1.2.5">v1.2.5</option><option value="object:119" label="v1.2.4">v1.2.4</option><option value="object:120" label="v1.2.3">v1.2.3</option><option value="object:121" label="v1.2.2">v1.2.2</option><option value="object:122" label="v1.2.1">v1.2.1</option><option value="object:123" label="v1.2.0">v1.2.0</option><option value="object:124" label="v1.2.0-rc.3">v1.2.0-rc.3</option><option value="object:125" label="v1.2.0-rc.2">v1.2.0-rc.2</option></optgroup><optgroup label="v1.1.x"><option value="object:127" label="v1.1.4">v1.1.4</option><option value="object:128" label="v1.1.3">v1.1.3</option><option value="object:129" label="v1.1.2">v1.1.2</option><option value="object:130" label="v1.1.1">v1.1.1</option><option value="object:131" label="v1.1.0">v1.1.0</option></optgroup><optgroup label="v1.0.x"><option value="object:133" label="v1.0.7">v1.0.7</option><option value="object:134" label="v1.0.6">v1.0.6</option><option value="object:135" label="v1.0.5">v1.0.5</option><option value="object:136" label="v1.0.4">v1.0.4</option><option value="object:137" label="v1.0.3">v1.0.3</option><option value="object:138" label="v1.0.2">v1.0.2</option><option value="object:139" label="v1.0.1">v1.0.1</option><option value="object:140" label="v1.0.0">v1.0.0</option><option value="object:141" label="v1.0.0rc2">v1.0.0rc2</option></optgroup></select>
            </div>
          </div>
          <div class="grid-right">
            <ul class="nav-breadcrumb">
              <!-- ngRepeat: crumb in breadcrumb --><li ng-repeat="crumb in breadcrumb" class="nav-breadcrumb-entry naked-list ng-scope">
                <span class="divider"> /</span>
                <a href="https://docs.angularjs.org/api" class="ng-binding" ng-href="api">API Reference</a>
              </li><!-- end ngRepeat: crumb in breadcrumb --><li ng-repeat="crumb in breadcrumb" class="nav-breadcrumb-entry naked-list ng-scope">
                <span class="divider"> /</span>
                <a href="https://docs.angularjs.org/api/ng" class="ng-binding" ng-href="api/ng">ng</a>
              </li><!-- end ngRepeat: crumb in breadcrumb --><li ng-repeat="crumb in breadcrumb" class="nav-breadcrumb-entry naked-list ng-scope">
                <span class="divider"> /</span>
                <a href="https://docs.angularjs.org/api/ng/service" class="ng-binding" ng-href="api/ng/service">service components in ng</a>
              </li><!-- end ngRepeat: crumb in breadcrumb --><li ng-repeat="crumb in breadcrumb" class="nav-breadcrumb-entry naked-list ng-scope">
                <span class="divider"> /</span>
                <a href="https://docs.angularjs.org/api/ng/service/$http" class="ng-binding" ng-href="api/ng/service/$http">$http</a>
              </li><!-- end ngRepeat: crumb in breadcrumb -->
            </ul>
          </div>
        </div>
      </section>
    </header>

    <section role="main" class="container main-body">
      <div class="main-grid main-body-grid">
        <div class="grid-left">
          <a class="btn toc-toggle visible-xs" ng-click="toc=!toc">Show / Hide Table of Contents</a>
          <div class="side-navigation ng-hide" ng-show="toc==true">
            <ul class="nav-list naked-list">
              <!-- ngRepeat: navGroup in currentArea.navGroups track by navGroup.name --><li ng-repeat="navGroup in currentArea.navGroups track by navGroup.name" class="nav-index-group ng-scope">
                <a href="https://docs.angularjs.org/api/ng" ng-class="navClass(navGroup)" class="nav-index-group-heading ng-binding active">ng</a>
                <ul class="aside-nav">
                  <!-- ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/function">function</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/function/angular.bind">angular.bind</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/function/angular.bootstrap">angular.bootstrap</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/function/angular.copy">angular.copy</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/function/angular.element">angular.element</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/function/angular.equals">angular.equals</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/function/angular.extend">angular.extend</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/function/angular.forEach">angular.forEach</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/function/angular.fromJson">angular.fromJson</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/function/angular.identity">angular.identity</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/function/angular.injector">angular.injector</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/function/angular.isArray">angular.isArray</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/function/angular.isDate">angular.isDate</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/function/angular.isDefined">angular.isDefined</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/function/angular.isElement">angular.isElement</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/function/angular.isFunction">angular.isFunction</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/function/angular.isNumber">angular.isNumber</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/function/angular.isObject">angular.isObject</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/function/angular.isString">angular.isString</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/function/angular.isUndefined">angular.isUndefined</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/function/angular.merge">angular.merge</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/function/angular.module">angular.module</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/function/angular.noop">angular.noop</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/function/angular.reloadWithDebugInfo">angular.reloadWithDebugInfo</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/function/angular.toJson">angular.toJson</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive">directive</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/a">a</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/form">form</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/input">input</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/input/input[checkbox]">input[checkbox]</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/input/input[date]">input[date]</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/input/input[datetime-local]">input[datetime-local]</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/input/input[email]">input[email]</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/input/input[month]">input[month]</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/input/input[number]">input[number]</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/input/input[radio]">input[radio]</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/input/input[range]">input[range]</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/input/input[text]">input[text]</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/input/input[time]">input[time]</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/input/input[url]">input[url]</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/input/input[week]">input[week]</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngApp">ngApp</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngBind">ngBind</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngBindHtml">ngBindHtml</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngBindTemplate">ngBindTemplate</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngBlur">ngBlur</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngChange">ngChange</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngChecked">ngChecked</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngClass">ngClass</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngClassEven">ngClassEven</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngClassOdd">ngClassOdd</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngClick">ngClick</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngCloak">ngCloak</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngController">ngController</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngCopy">ngCopy</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngCsp">ngCsp</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngCut">ngCut</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngDblclick">ngDblclick</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngDisabled">ngDisabled</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngFocus">ngFocus</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngForm">ngForm</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngHide">ngHide</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngHref">ngHref</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngIf">ngIf</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngInclude">ngInclude</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngInit">ngInit</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngJq">ngJq</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngKeydown">ngKeydown</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngKeypress">ngKeypress</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngKeyup">ngKeyup</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngList">ngList</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngMaxlength">ngMaxlength</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngMinlength">ngMinlength</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngModel">ngModel</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngModelOptions">ngModelOptions</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngMousedown">ngMousedown</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngMouseenter">ngMouseenter</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngMouseleave">ngMouseleave</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngMousemove">ngMousemove</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngMouseover">ngMouseover</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngMouseup">ngMouseup</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngNonBindable">ngNonBindable</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngOpen">ngOpen</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngOptions">ngOptions</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngPaste">ngPaste</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngPattern">ngPattern</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngPluralize">ngPluralize</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngReadonly">ngReadonly</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngRepeat">ngRepeat</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngRequired">ngRequired</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngSelected">ngSelected</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngShow">ngShow</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngSrc">ngSrc</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngSrcset">ngSrcset</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngStyle">ngStyle</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngSubmit">ngSubmit</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngSwitch">ngSwitch</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngTransclude">ngTransclude</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/ngValue">ngValue</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/script">script</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/select">select</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/directive/textarea">textarea</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/object">object</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/object/angular.version">angular.version</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/type">type</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/type/$cacheFactory.Cache">$cacheFactory.Cache</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/type/$compile.directive.Attributes">$compile.directive.Attributes</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/type/$rootScope.Scope">$rootScope.Scope</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/type/angular.Module">angular.Module</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/type/form.FormController">form.FormController</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/type/ngModel.NgModelController">ngModel.NgModelController</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/type/select.SelectController">select.SelectController</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/provider">provider</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/provider/$anchorScrollProvider">$anchorScrollProvider</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/provider/$animateProvider">$animateProvider</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/provider/$compileProvider">$compileProvider</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/provider/$controllerProvider">$controllerProvider</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/provider/$filterProvider">$filterProvider</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/provider/$httpProvider">$httpProvider</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/provider/$interpolateProvider">$interpolateProvider</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/provider/$locationProvider">$locationProvider</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/provider/$logProvider">$logProvider</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/provider/$parseProvider">$parseProvider</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/provider/$qProvider">$qProvider</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/provider/$rootScopeProvider">$rootScopeProvider</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/provider/$sceDelegateProvider">$sceDelegateProvider</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/provider/$sceProvider">$sceProvider</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/provider/$templateRequestProvider">$templateRequestProvider</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/service">service</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/service/$anchorScroll">$anchorScroll</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/service/$animate">$animate</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/service/$animateCss">$animateCss</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/service/$cacheFactory">$cacheFactory</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/service/$compile">$compile</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/service/$controller">$controller</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/service/$document">$document</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/service/$exceptionHandler">$exceptionHandler</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/service/$filter">$filter</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active current">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/service/$http">$http</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/service/$httpBackend">$httpBackend</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/service/$httpParamSerializer">$httpParamSerializer</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/service/$httpParamSerializerJQLike">$httpParamSerializerJQLike</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/service/$interpolate">$interpolate</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/service/$interval">$interval</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/service/$jsonpCallbacks">$jsonpCallbacks</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/service/$locale">$locale</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/service/$location">$location</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/service/$log">$log</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/service/$parse">$parse</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/service/$q">$q</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/service/$rootElement">$rootElement</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/service/$rootScope">$rootScope</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/service/$sce">$sce</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/service/$sceDelegate">$sceDelegate</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/service/$templateCache">$templateCache</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/service/$templateRequest">$templateRequest</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/service/$timeout">$timeout</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/service/$window">$window</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/service/$xhrFactory">$xhrFactory</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/filter">filter</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/filter/currency">currency</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/filter/date">date</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/filter/filter">filter</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/filter/json">json</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/filter/limitTo">limitTo</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/filter/lowercase">lowercase</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/filter/number">number</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/filter/orderBy">orderBy</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ng/filter/uppercase">uppercase</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems -->
                </ul>
              </li><!-- end ngRepeat: navGroup in currentArea.navGroups track by navGroup.name --><li ng-repeat="navGroup in currentArea.navGroups track by navGroup.name" class="nav-index-group ng-scope">
                <a href="https://docs.angularjs.org/api/auto" ng-class="navClass(navGroup)" class="nav-index-group-heading ng-binding active">auto</a>
                <ul class="aside-nav">
                  <!-- ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/auto/service">service</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/auto/service/$injector">$injector</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/auto/service/$provide">$provide</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems -->
                </ul>
              </li><!-- end ngRepeat: navGroup in currentArea.navGroups track by navGroup.name --><li ng-repeat="navGroup in currentArea.navGroups track by navGroup.name" class="nav-index-group ng-scope">
                <a href="https://docs.angularjs.org/api/ngAnimate" ng-class="navClass(navGroup)" class="nav-index-group-heading ng-binding active">ngAnimate</a>
                <ul class="aside-nav">
                  <!-- ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngAnimate/directive">directive</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngAnimate/directive/ngAnimateChildren">ngAnimateChildren</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngAnimate/directive/ngAnimateSwap">ngAnimateSwap</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngAnimate/service">service</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngAnimate/service/$animate">$animate</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngAnimate/service/$animateCss">$animateCss</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems -->
                </ul>
              </li><!-- end ngRepeat: navGroup in currentArea.navGroups track by navGroup.name --><li ng-repeat="navGroup in currentArea.navGroups track by navGroup.name" class="nav-index-group ng-scope">
                <a href="https://docs.angularjs.org/api/ngAria" ng-class="navClass(navGroup)" class="nav-index-group-heading ng-binding active">ngAria</a>
                <ul class="aside-nav">
                  <!-- ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngAria/provider">provider</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngAria/provider/$ariaProvider">$ariaProvider</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngAria/service">service</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngAria/service/$aria">$aria</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems -->
                </ul>
              </li><!-- end ngRepeat: navGroup in currentArea.navGroups track by navGroup.name --><li ng-repeat="navGroup in currentArea.navGroups track by navGroup.name" class="nav-index-group ng-scope">
                <a href="https://docs.angularjs.org/api/ngComponentRouter" ng-class="navClass(navGroup)" class="nav-index-group-heading ng-binding active">ngComponentRouter</a>
                <ul class="aside-nav">
                  <!-- ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngComponentRouter/type">type</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngComponentRouter/type/ChildRouter">ChildRouter</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngComponentRouter/type/ComponentInstruction">ComponentInstruction</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngComponentRouter/type/RootRouter">RootRouter</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngComponentRouter/type/RouteDefinition">RouteDefinition</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngComponentRouter/type/RouteParams">RouteParams</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngComponentRouter/type/Router">Router</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngComponentRouter/directive">directive</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngComponentRouter/directive/ngOutlet">ngOutlet</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngComponentRouter/service">service</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngComponentRouter/service/$rootRouter">$rootRouter</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngComponentRouter/service/$routerRootComponent">$routerRootComponent</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems -->
                </ul>
              </li><!-- end ngRepeat: navGroup in currentArea.navGroups track by navGroup.name --><li ng-repeat="navGroup in currentArea.navGroups track by navGroup.name" class="nav-index-group ng-scope">
                <a href="https://docs.angularjs.org/api/ngCookies" ng-class="navClass(navGroup)" class="nav-index-group-heading ng-binding active">ngCookies</a>
                <ul class="aside-nav">
                  <!-- ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngCookies/provider">provider</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngCookies/provider/$cookiesProvider">$cookiesProvider</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngCookies/service">service</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngCookies/service/$cookieStore">$cookieStore</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngCookies/service/$cookies">$cookies</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems -->
                </ul>
              </li><!-- end ngRepeat: navGroup in currentArea.navGroups track by navGroup.name --><li ng-repeat="navGroup in currentArea.navGroups track by navGroup.name" class="nav-index-group ng-scope">
                <a href="https://docs.angularjs.org/api/ngMessageFormat" ng-class="navClass(navGroup)" class="nav-index-group-heading ng-binding active">ngMessageFormat</a>
                <ul class="aside-nav">
                  <!-- ngRepeat: navItem in navGroup.navItems -->
                </ul>
              </li><!-- end ngRepeat: navGroup in currentArea.navGroups track by navGroup.name --><li ng-repeat="navGroup in currentArea.navGroups track by navGroup.name" class="nav-index-group ng-scope">
                <a href="https://docs.angularjs.org/api/ngMessages" ng-class="navClass(navGroup)" class="nav-index-group-heading ng-binding active">ngMessages</a>
                <ul class="aside-nav">
                  <!-- ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngMessages/directive">directive</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngMessages/directive/ngMessage">ngMessage</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngMessages/directive/ngMessageExp">ngMessageExp</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngMessages/directive/ngMessages">ngMessages</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngMessages/directive/ngMessagesInclude">ngMessagesInclude</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems -->
                </ul>
              </li><!-- end ngRepeat: navGroup in currentArea.navGroups track by navGroup.name --><li ng-repeat="navGroup in currentArea.navGroups track by navGroup.name" class="nav-index-group ng-scope">
                <a href="https://docs.angularjs.org/api/ngMock" ng-class="navClass(navGroup)" class="nav-index-group-heading ng-binding active">ngMock</a>
                <ul class="aside-nav">
                  <!-- ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngMock/object">object</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngMock/object/angular.mock">angular.mock</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngMock/provider">provider</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngMock/provider/$exceptionHandlerProvider">$exceptionHandlerProvider</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngMock/service">service</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngMock/service/$animate">$animate</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngMock/service/$componentController">$componentController</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngMock/service/$controller">$controller</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngMock/service/$exceptionHandler">$exceptionHandler</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngMock/service/$httpBackend">$httpBackend</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngMock/service/$interval">$interval</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngMock/service/$log">$log</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngMock/service/$timeout">$timeout</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngMock/type">type</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngMock/type/$rootScope.Scope">$rootScope.Scope</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngMock/type/angular.mock.TzDate">angular.mock.TzDate</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngMock/function">function</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngMock/function/angular.mock.dump">angular.mock.dump</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngMock/function/angular.mock.inject">angular.mock.inject</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngMock/function/angular.mock.module">angular.mock.module</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngMock/function/angular.mock.module.sharedInjector">angular.mock.module.sharedInjector</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems -->
                </ul>
              </li><!-- end ngRepeat: navGroup in currentArea.navGroups track by navGroup.name --><li ng-repeat="navGroup in currentArea.navGroups track by navGroup.name" class="nav-index-group ng-scope">
                <a href="https://docs.angularjs.org/api/ngMockE2E" ng-class="navClass(navGroup)" class="nav-index-group-heading ng-binding active">ngMockE2E</a>
                <ul class="aside-nav">
                  <!-- ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngMockE2E/service">service</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngMockE2E/service/$httpBackend">$httpBackend</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems -->
                </ul>
              </li><!-- end ngRepeat: navGroup in currentArea.navGroups track by navGroup.name --><li ng-repeat="navGroup in currentArea.navGroups track by navGroup.name" class="nav-index-group ng-scope">
                <a href="https://docs.angularjs.org/api/ngParseExt" ng-class="navClass(navGroup)" class="nav-index-group-heading ng-binding active">ngParseExt</a>
                <ul class="aside-nav">
                  <!-- ngRepeat: navItem in navGroup.navItems -->
                </ul>
              </li><!-- end ngRepeat: navGroup in currentArea.navGroups track by navGroup.name --><li ng-repeat="navGroup in currentArea.navGroups track by navGroup.name" class="nav-index-group ng-scope">
                <a href="https://docs.angularjs.org/api/ngResource" ng-class="navClass(navGroup)" class="nav-index-group-heading ng-binding active">ngResource</a>
                <ul class="aside-nav">
                  <!-- ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngResource/provider">provider</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngResource/provider/$resourceProvider">$resourceProvider</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngResource/service">service</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngResource/service/$resource">$resource</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems -->
                </ul>
              </li><!-- end ngRepeat: navGroup in currentArea.navGroups track by navGroup.name --><li ng-repeat="navGroup in currentArea.navGroups track by navGroup.name" class="nav-index-group ng-scope">
                <a href="https://docs.angularjs.org/api/ngRoute" ng-class="navClass(navGroup)" class="nav-index-group-heading ng-binding active">ngRoute</a>
                <ul class="aside-nav">
                  <!-- ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngRoute/directive">directive</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngRoute/directive/ngView">ngView</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngRoute/provider">provider</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngRoute/provider/$routeProvider">$routeProvider</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngRoute/service">service</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngRoute/service/$route">$route</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngRoute/service/$routeParams">$routeParams</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems -->
                </ul>
              </li><!-- end ngRepeat: navGroup in currentArea.navGroups track by navGroup.name --><li ng-repeat="navGroup in currentArea.navGroups track by navGroup.name" class="nav-index-group ng-scope">
                <a href="https://docs.angularjs.org/api/ngSanitize" ng-class="navClass(navGroup)" class="nav-index-group-heading ng-binding active">ngSanitize</a>
                <ul class="aside-nav">
                  <!-- ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngSanitize/filter">filter</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngSanitize/filter/linky">linky</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngSanitize/service">service</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngSanitize/service/$sanitize">$sanitize</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngSanitize/provider">provider</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngSanitize/provider/$sanitizeProvider">$sanitizeProvider</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems -->
                </ul>
              </li><!-- end ngRepeat: navGroup in currentArea.navGroups track by navGroup.name --><li ng-repeat="navGroup in currentArea.navGroups track by navGroup.name" class="nav-index-group ng-scope">
                <a href="https://docs.angularjs.org/api/ngTouch" ng-class="navClass(navGroup)" class="nav-index-group-heading ng-binding active">ngTouch</a>
                <ul class="aside-nav">
                  <!-- ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngTouch/directive">directive</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngTouch/directive/ngClick">ngClick</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngTouch/directive/ngSwipeLeft">ngSwipeLeft</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngTouch/directive/ngSwipeRight">ngSwipeRight</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngTouch/service">service</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngTouch/service/$swipe">$swipe</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngTouch/service/$touch">$touch</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active nav-index-section">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngTouch/provider">provider</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems --><li ng-repeat="navItem in navGroup.navItems" ng-class="navClass(navItem)" class="nav-index-listing ng-scope active">
                    <!-- ngIf: navItem.extra.href -->
                    <a class="ng-binding" tabindex="2" ng-class="linkClass(navItem)" href="https://docs.angularjs.org/api/ngTouch/provider/$touchProvider">$touchProvider</a>
                  </li><!-- end ngRepeat: navItem in navGroup.navItems -->
                </ul>
              </li><!-- end ngRepeat: navGroup in currentArea.navGroups track by navGroup.name -->
            </ul>
            <a href="" ng-click="toc=false" class="toc-close visible-xs">
              <span class="glyphicon glyphicon-remove toc-close-icon"></span> Close
            </a>
          </div>
        </div>
        <div class="grid-right">
          <div class="ng-hide" id="loading" ng-show="loading">Loading...</div>
          <!-- ngInclude: partialPath --><div style="" class="ng-scope" ng-hide="loading" ng-include="partialPath" autoscroll=""><a href="https://github.com/angular/angular.js/edit/master/src/ng/http.js?message=docs%28$http%29%3A%20describe%20your%20change...#L405" class="improve-docs btn btn-primary ng-scope"><i class="glyphicon glyphicon-edit">&nbsp;</i>Improve this Doc</a>



<a href="https://github.com/angular/angular.js/tree/master/src/ng/http.js#L405" class="view-source pull-right btn btn-primary ng-scope">
  <i class="glyphicon glyphicon-zoom-in">&nbsp;</i>View Source
</a>


<header class="api-profile-header ng-scope">
  <h1 class="api-profile-header-heading">$http</h1>
  <ol class="api-profile-header-structure naked-list step-list">
    
  <li>
    <a href="https://docs.angularjs.org/api/ng/provider/$httpProvider">- $httpProvider</a>
  </li>

    <li>
      - service in module <a href="https://docs.angularjs.org/api/ng">ng</a>
    </li>
  </ol>
</header>



<div class="api-profile-description ng-scope">
  <p>The <code><span class="pln">$http</span></code> service is a core Angular service that facilitates communication with the remote
HTTP servers via the browser's <a href="https://developer.mozilla.org/en/xmlhttprequest">XMLHttpRequest</a>
object or via <a href="http://en.wikipedia.org/wiki/JSONP">JSONP</a>.</p>
<p>For unit testing applications that use <code><span class="pln">$http</span></code> service, see
<a href="https://docs.angularjs.org/api/ngMock/service/$httpBackend">$httpBackend mock</a>.</p>
<p>For a higher level of abstraction, please check out the <a href="https://docs.angularjs.org/api/ngResource/service/$resource">$resource</a> service.</p>
<p>The $http API is based on the <a href="https://docs.angularjs.org/api/ng/service/$q">deferred/promise APIs</a> exposed by
the $q service. While for simple usage patterns this doesn't matter much, for advanced usage
it is important to familiarize yourself with these APIs and the guarantees they provide.</p>
<h2 id="general-usage">General usage</h2>
<p>The <code><span class="pln">$http</span></code> service is a function which takes a single argument — a <a href="https://docs.angularjs.org/api/ng/service/$http#usage">configuration object</a> —
that is used to generate an HTTP request and returns  a <a href="https://docs.angularjs.org/api/ng/service/$q">promise</a>.</p>
<pre><code class="lang-js"><span class="com">// Simple GET request example:</span><span class="pln">
$http</span><span class="pun">({</span><span class="pln">
  method</span><span class="pun">:</span><span class="pln"> </span><span class="str">'GET'</span><span class="pun">,</span><span class="pln">
  url</span><span class="pun">:</span><span class="pln"> </span><span class="str">'/someUrl'</span><span class="pln">
</span><span class="pun">}).</span><span class="pln">then</span><span class="pun">(</span><span class="kwd">function</span><span class="pln"> successCallback</span><span class="pun">(</span><span class="pln">response</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="com">// this callback will be called asynchronously</span><span class="pln">
    </span><span class="com">// when the response is available</span><span class="pln">
  </span><span class="pun">},</span><span class="pln"> </span><span class="kwd">function</span><span class="pln"> errorCallback</span><span class="pun">(</span><span class="pln">response</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="com">// called asynchronously if an error occurs</span><span class="pln">
    </span><span class="com">// or server returns response with an error status.</span><span class="pln">
  </span><span class="pun">});</span></code></pre>
<p>The response object has these properties:</p>
<ul>
<li><strong>data</strong> – <code><span class="pun">{</span><span class="kwd">string</span><span class="pun">|</span><span class="typ">Object</span><span class="pun">}</span></code> – The response body transformed with the transform
functions.</li>
<li><strong>status</strong> – <code><span class="pun">{</span><span class="pln">number</span><span class="pun">}</span></code> – HTTP status code of the response.</li>
<li><strong>headers</strong> – <code><span class="pun">{</span><span class="kwd">function</span><span class="pun">([</span><span class="pln">headerName</span><span class="pun">])}</span></code> – Header getter function.</li>
<li><strong>config</strong> – <code><span class="pun">{</span><span class="typ">Object</span><span class="pun">}</span></code> – The configuration object that was used to generate the request.</li>
<li><strong>statusText</strong> – <code><span class="pun">{</span><span class="kwd">string</span><span class="pun">}</span></code> – HTTP status text of the response.</li>
</ul>
<p>A response status code between 200 and 299 is considered a success status and will result in
the success callback being called. Any response status code outside of that range is
considered an error status and will result in the error callback being called.
Also, status codes less than -1 are normalized to zero. -1 usually means the request was
aborted, e.g. using a <code><span class="pln">config</span><span class="pun">.</span><span class="pln">timeout</span></code>.
Note that if the response is a redirect, XMLHttpRequest will transparently follow it, meaning
that the outcome (success or error) will be determined by the final response status code.</p>
<h2 id="shortcut-methods">Shortcut methods</h2>
<p>Shortcut methods are also available. All shortcut methods require passing in the URL, and
request data must be passed in for POST/PUT requests. An optional config can be passed as the
last argument.</p>
<pre><code class="lang-js"><span class="pln">$http</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="str">'/someUrl'</span><span class="pun">,</span><span class="pln"> config</span><span class="pun">).</span><span class="pln">then</span><span class="pun">(</span><span class="pln">successCallback</span><span class="pun">,</span><span class="pln"> errorCallback</span><span class="pun">);</span><span class="pln">
$http</span><span class="pun">.</span><span class="pln">post</span><span class="pun">(</span><span class="str">'/someUrl'</span><span class="pun">,</span><span class="pln"> data</span><span class="pun">,</span><span class="pln"> config</span><span class="pun">).</span><span class="pln">then</span><span class="pun">(</span><span class="pln">successCallback</span><span class="pun">,</span><span class="pln"> errorCallback</span><span class="pun">);</span></code></pre>
<p>Complete list of shortcut methods:</p>
<ul>
<li><a href="https://docs.angularjs.org/api/ng/service/$http#get">$http.get</a></li>
<li><a href="https://docs.angularjs.org/api/ng/service/$http#head">$http.head</a></li>
<li><a href="https://docs.angularjs.org/api/ng/service/$http#post">$http.post</a></li>
<li><a href="https://docs.angularjs.org/api/ng/service/$http#put">$http.put</a></li>
<li><a href="https://docs.angularjs.org/api/ng/service/$http#delete">$http.delete</a></li>
<li><a href="https://docs.angularjs.org/api/ng/service/$http#jsonp">$http.jsonp</a></li>
<li><a href="https://docs.angularjs.org/api/ng/service/$http#patch">$http.patch</a></li>
</ul>
<h2 id="writing-unit-tests-that-use-http">Writing Unit Tests that use $http</h2>
<p>When unit testing (using <a href="https://docs.angularjs.org/api/ngMock">ngMock</a>), it is necessary to call
<a href="https://docs.angularjs.org/api/ngMock/service/$httpBackend#flush">$httpBackend.flush()</a> to flush each pending
request using trained responses.</p>
<pre><code><span class="pln">$httpBackend</span><span class="pun">.</span><span class="pln">expectGET</span><span class="pun">(...);</span><span class="pln">
$http</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(...);</span><span class="pln">
$httpBackend</span><span class="pun">.</span><span class="pln">flush</span><span class="pun">();</span></code></pre>
<h2 id="deprecation-notice">Deprecation Notice</h2>
<div class="alert alert-danger">
  The <code><span class="pln">$http</span></code> legacy promise methods <code><span class="pln">success</span></code> and <code><span class="pln">error</span></code> have been deprecated.
  Use the standard <code><span class="kwd">then</span></code> method instead.
  If <a href="https://docs.angularjs.org/api/ng/provider/$httpProvider#useLegacyPromiseExtensions"><code><span class="pln">$httpProvider</span><span class="pun">.</span><span class="pln">useLegacyPromiseExtensions</span></code></a> is set to
  <code><span class="kwd">false</span></code> then these methods will throw <a href="https://docs.angularjs.org/error/$http/legacy"><code><span class="pln">$http</span><span class="pun">/</span><span class="pln">legacy</span></code></a> error.
</div>

<h2 id="setting-http-headers">Setting HTTP Headers</h2>
<p>The $http service will automatically add certain HTTP headers to all requests. These defaults
can be fully configured by accessing the <code><span class="pln">$httpProvider</span><span class="pun">.</span><span class="pln">defaults</span><span class="pun">.</span><span class="pln">headers</span></code> configuration
object, which currently contains this default configuration:</p>
<ul>
<li><code><span class="pln">$httpProvider</span><span class="pun">.</span><span class="pln">defaults</span><span class="pun">.</span><span class="pln">headers</span><span class="pun">.</span><span class="pln">common</span></code> (headers that are common for all requests):<ul>
<li><code><span class="typ">Accept</span><span class="pun">:</span><span class="pln"> application</span><span class="pun">/</span><span class="pln">json</span><span class="pun">,</span><span class="pln"> text</span><span class="pun">/</span><span class="pln">plain</span><span class="pun">,</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> </span><span class="pun">/</span><span class="pln"> </span><span class="pun">*</span></code></li>
</ul>
</li>
<li><code><span class="pln">$httpProvider</span><span class="pun">.</span><span class="pln">defaults</span><span class="pun">.</span><span class="pln">headers</span><span class="pun">.</span><span class="pln">post</span></code>: (header defaults for POST requests)<ul>
<li><code><span class="typ">Content</span><span class="pun">-</span><span class="typ">Type</span><span class="pun">:</span><span class="pln"> application</span><span class="pun">/</span><span class="pln">json</span></code></li>
</ul>
</li>
<li><code><span class="pln">$httpProvider</span><span class="pun">.</span><span class="pln">defaults</span><span class="pun">.</span><span class="pln">headers</span><span class="pun">.</span><span class="pln">put</span></code> (header defaults for PUT requests)<ul>
<li><code><span class="typ">Content</span><span class="pun">-</span><span class="typ">Type</span><span class="pun">:</span><span class="pln"> application</span><span class="pun">/</span><span class="pln">json</span></code></li>
</ul>
</li>
</ul>
<p>To add or overwrite these defaults, simply add or remove a property from these configuration
objects. To add headers for an HTTP method other than POST or PUT, simply add a new object
with the lowercased HTTP method name as the key, e.g.
<code><span class="pln">$httpProvider</span><span class="pun">.</span><span class="pln">defaults</span><span class="pun">.</span><span class="pln">headers</span><span class="pun">.</span><span class="kwd">get</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> </span><span class="str">'My-Header'</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> </span><span class="str">'value'</span><span class="pln"> </span><span class="pun">}</span></code>.</p>
<p>The defaults can also be set at runtime via the <code><span class="pln">$http</span><span class="pun">.</span><span class="pln">defaults</span></code> object in the same
fashion. For example:</p>
<pre><code><span class="kwd">module</span><span class="pun">.</span><span class="pln">run</span><span class="pun">(</span><span class="kwd">function</span><span class="pun">(</span><span class="pln">$http</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  $http</span><span class="pun">.</span><span class="pln">defaults</span><span class="pun">.</span><span class="pln">headers</span><span class="pun">.</span><span class="pln">common</span><span class="pun">.</span><span class="typ">Authorization</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="str">'Basic YmVlcDpib29w'</span><span class="pun">;</span><span class="pln">
</span><span class="pun">});</span></code></pre>
<p>In addition, you can supply a <code><span class="pln">headers</span></code> property in the config object passed when
calling <code><span class="pln">$http</span><span class="pun">(</span><span class="pln">config</span><span class="pun">)</span></code>, which overrides the defaults without changing them globally.</p>
<p>To explicitly remove a header automatically added via $httpProvider.defaults.headers on a per request basis,
Use the <code><span class="pln">headers</span></code> property, setting the desired header to <code><span class="kwd">undefined</span></code>. For example:</p>
<pre><code class="lang-js"><span class="kwd">var</span><span class="pln"> req </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
 method</span><span class="pun">:</span><span class="pln"> </span><span class="str">'POST'</span><span class="pun">,</span><span class="pln">
 url</span><span class="pun">:</span><span class="pln"> </span><span class="str">'http://example.com'</span><span class="pun">,</span><span class="pln">
 headers</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
   </span><span class="str">'Content-Type'</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">undefined</span><span class="pln">
 </span><span class="pun">},</span><span class="pln">
 data</span><span class="pun">:</span><span class="pln"> </span><span class="pun">{</span><span class="pln"> test</span><span class="pun">:</span><span class="pln"> </span><span class="str">'test'</span><span class="pln"> </span><span class="pun">}</span><span class="pln">
</span><span class="pun">}</span><span class="pln">

$http</span><span class="pun">(</span><span class="pln">req</span><span class="pun">).</span><span class="pln">then</span><span class="pun">(</span><span class="kwd">function</span><span class="pun">(){...},</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(){...});</span></code></pre>
<h2 id="transforming-requests-and-responses">Transforming Requests and Responses</h2>
<p>Both requests and responses can be transformed using transformation functions: <code><span class="pln">transformRequest</span></code>
and <code><span class="pln">transformResponse</span></code>. These properties can be a single function that returns
the transformed value (<code><span class="kwd">function</span><span class="pun">(</span><span class="pln">data</span><span class="pun">,</span><span class="pln"> headersGetter</span><span class="pun">,</span><span class="pln"> status</span><span class="pun">)</span></code>) or an array of such transformation functions,
which allows you to <code><span class="pln">push</span></code> or <code><span class="pln">unshift</span></code> a new transformation function into the transformation chain.</p>
<div class="alert alert-warning">
<strong>Note:</strong> Angular does not make a copy of the <code><span class="pln">data</span></code> parameter before it is passed into the <code><span class="pln">transformRequest</span></code> pipeline.
That means changes to the properties of <code><span class="pln">data</span></code> are not local to the transform function (since Javascript passes objects by reference).
For example, when calling <code><span class="pln">$http</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="pln">url</span><span class="pun">,</span><span class="pln"> $scope</span><span class="pun">.</span><span class="pln">myObject</span><span class="pun">)</span></code>, modifications to the object's properties in a transformRequest
function will be reflected on the scope and in any templates where the object is data-bound.
To prevent this, transform functions should have no side-effects.
If you need to modify properties, it is recommended to make a copy of the data, or create new object to return.
</div>

<h3 id="default-transformations">Default Transformations</h3>
<p>The <code><span class="pln">$httpProvider</span></code> provider and <code><span class="pln">$http</span></code> service expose <code><span class="pln">defaults</span><span class="pun">.</span><span class="pln">transformRequest</span></code> and
<code><span class="pln">defaults</span><span class="pun">.</span><span class="pln">transformResponse</span></code> properties. If a request does not provide its own transformations
then these will be applied.</p>
<p>You can augment or replace the default transformations by modifying these properties by adding to or
replacing the array.</p>
<p>Angular provides the following default transformations:</p>
<p>Request transformations (<code><span class="pln">$httpProvider</span><span class="pun">.</span><span class="pln">defaults</span><span class="pun">.</span><span class="pln">transformRequest</span></code> and <code><span class="pln">$http</span><span class="pun">.</span><span class="pln">defaults</span><span class="pun">.</span><span class="pln">transformRequest</span></code>):</p>
<ul>
<li>If the <code><span class="pln">data</span></code> property of the request configuration object contains an object, serialize it
into JSON format.</li>
</ul>
<p>Response transformations (<code><span class="pln">$httpProvider</span><span class="pun">.</span><span class="pln">defaults</span><span class="pun">.</span><span class="pln">transformResponse</span></code> and <code><span class="pln">$http</span><span class="pun">.</span><span class="pln">defaults</span><span class="pun">.</span><span class="pln">transformResponse</span></code>):</p>
<ul>
<li>If XSRF prefix is detected, strip it (see Security Considerations section below).</li>
<li>If JSON response is detected, deserialize it using a JSON parser.</li>
</ul>
<h3 id="overriding-the-default-transformations-per-request">Overriding the Default Transformations Per Request</h3>
<p>If you wish to override the request/response transformations only for a single request then provide
<code><span class="pln">transformRequest</span></code> and/or <code><span class="pln">transformResponse</span></code> properties on the configuration object passed
into <code><span class="pln">$http</span></code>.</p>
<p>Note that if you provide these properties on the config object the default transformations will be
overwritten. If you wish to augment the default transformations then you must include them in your
local transformation array.</p>
<p>The following code demonstrates adding a new response transformation to be run after the default response
transformations have been run.</p>
<pre><code class="lang-js"><span class="kwd">function</span><span class="pln"> appendTransform</span><span class="pun">(</span><span class="pln">defaults</span><span class="pun">,</span><span class="pln"> transform</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">

  </span><span class="com">// We can't guarantee that the default transformation is an array</span><span class="pln">
  defaults </span><span class="pun">=</span><span class="pln"> angular</span><span class="pun">.</span><span class="pln">isArray</span><span class="pun">(</span><span class="pln">defaults</span><span class="pun">)</span><span class="pln"> </span><span class="pun">?</span><span class="pln"> defaults </span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="pln">defaults</span><span class="pun">];</span><span class="pln">

  </span><span class="com">// Append the new transformation to the defaults</span><span class="pln">
  </span><span class="kwd">return</span><span class="pln"> defaults</span><span class="pun">.</span><span class="pln">concat</span><span class="pun">(</span><span class="pln">transform</span><span class="pun">);</span><span class="pln">
</span><span class="pun">}</span><span class="pln">

$http</span><span class="pun">({</span><span class="pln">
  url</span><span class="pun">:</span><span class="pln"> </span><span class="str">'...'</span><span class="pun">,</span><span class="pln">
  method</span><span class="pun">:</span><span class="pln"> </span><span class="str">'GET'</span><span class="pun">,</span><span class="pln">
  transformResponse</span><span class="pun">:</span><span class="pln"> appendTransform</span><span class="pun">(</span><span class="pln">$http</span><span class="pun">.</span><span class="pln">defaults</span><span class="pun">.</span><span class="pln">transformResponse</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">value</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> doTransform</span><span class="pun">(</span><span class="pln">value</span><span class="pun">);</span><span class="pln">
  </span><span class="pun">})</span><span class="pln">
</span><span class="pun">});</span></code></pre>
<h2 id="caching">Caching</h2>
<p><a href="https://docs.angularjs.org/api/ng/service/$http"><code><span class="pln">$http</span></code></a> responses are not cached by default. To enable caching, you must
set the config.cache value or the default cache value to TRUE or to a cache object (created
with <a href="https://docs.angularjs.org/api/ng/service/$cacheFactory"><code><span class="pln">$cacheFactory</span></code></a>). If defined, the value of config.cache takes
precedence over the default cache value.</p>
<p>In order to:</p>
<ul>
<li>cache all responses - set the default cache value to TRUE or to a cache object</li>
<li>cache a specific response - set config.cache value to TRUE or to a cache object</li>
</ul>
<p>If caching is enabled, but neither the default cache nor config.cache are set to a cache object,
then the default <code><span class="pln">$cacheFactory</span><span class="pun">(</span><span class="str">"$http"</span><span class="pun">)</span></code> object is used.</p>
<p>The default cache value can be set by updating the
<a href="https://docs.angularjs.org/api/ng/service/$http#defaults"><code><span class="pln">$http</span><span class="pun">.</span><span class="pln">defaults</span><span class="pun">.</span><span class="pln">cache</span></code></a> property or the
<a href="https://docs.angularjs.org/api/ng/provider/$httpProvider#defaults"><code><span class="pln">$httpProvider</span><span class="pun">.</span><span class="pln">defaults</span><span class="pun">.</span><span class="pln">cache</span></code></a> property.</p>
<p>When caching is enabled, <a href="https://docs.angularjs.org/api/ng/service/$http"><code><span class="pln">$http</span></code></a> stores the response from the server using
the relevant cache object. The next time the same request is made, the response is returned
from the cache without sending a request to the server.</p>
<p>Take note that:</p>
<ul>
<li>Only GET and JSONP requests are cached.</li>
<li>The cache key is the request URL including search parameters; headers are not considered.</li>
<li>Cached responses are returned asynchronously, in the same way as responses from the server.</li>
<li>If multiple identical requests are made using the same cache, which is not yet populated,
one request will be made to the server and remaining requests will return the same response.</li>
<li>A cache-control header on the response does not affect if or how responses are cached.</li>
</ul>
<h2 id="interceptors">Interceptors</h2>
<p>Before you start creating interceptors, be sure to understand the
<a href="https://docs.angularjs.org/api/ng/service/$q">$q and deferred/promise APIs</a>.</p>
<p>For purposes of global error handling, authentication, or any kind of synchronous or
asynchronous pre-processing of request or postprocessing of responses, it is desirable to be
able to intercept requests before they are handed to the server and
responses before they are handed over to the application code that
initiated these requests. The interceptors leverage the <a href="https://docs.angularjs.org/api/ng/service/$q">promise APIs</a> to fulfill this need for both synchronous and asynchronous pre-processing.</p>
<p>The interceptors are service factories that are registered with the <code><span class="pln">$httpProvider</span></code> by
adding them to the <code><span class="pln">$httpProvider</span><span class="pun">.</span><span class="pln">interceptors</span></code> array. The factory is called and
injected with dependencies (if specified) and returns the interceptor.</p>
<p>There are two kinds of interceptors (and two kinds of rejection interceptors):</p>
<ul>
<li><code><span class="pln">request</span></code>: interceptors get called with a http <a href="https://docs.angularjs.org/api/ng/service/$http#usage">config</a> object. The function is free to
modify the <code><span class="pln">config</span></code> object or create a new one. The function needs to return the <code><span class="pln">config</span></code>
object directly, or a promise containing the <code><span class="pln">config</span></code> or a new <code><span class="pln">config</span></code> object.</li>
<li><code><span class="pln">requestError</span></code>: interceptor gets called when a previous interceptor threw an error or
resolved with a rejection.</li>
<li><code><span class="pln">response</span></code>: interceptors get called with http <code><span class="pln">response</span></code> object. The function is free to
modify the <code><span class="pln">response</span></code> object or create a new one. The function needs to return the <code><span class="pln">response</span></code>
object directly, or as a promise containing the <code><span class="pln">response</span></code> or a new <code><span class="pln">response</span></code> object.</li>
<li><code><span class="pln">responseError</span></code>: interceptor gets called when a previous interceptor threw an error or
resolved with a rejection.</li>
</ul>
<pre><code class="lang-js"><span class="com">// register the interceptor as a service</span><span class="pln">
$provide</span><span class="pun">.</span><span class="pln">factory</span><span class="pun">(</span><span class="str">'myHttpInterceptor'</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">$q</span><span class="pun">,</span><span class="pln"> dependency1</span><span class="pun">,</span><span class="pln"> dependency2</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    </span><span class="com">// optional method</span><span class="pln">
    </span><span class="str">'request'</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">config</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">// do something on success</span><span class="pln">
      </span><span class="kwd">return</span><span class="pln"> config</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">},</span><span class="pln">

    </span><span class="com">// optional method</span><span class="pln">
   </span><span class="str">'requestError'</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">rejection</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">// do something on error</span><span class="pln">
      </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">canRecover</span><span class="pun">(</span><span class="pln">rejection</span><span class="pun">))</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">return</span><span class="pln"> responseOrNewPromise
      </span><span class="pun">}</span><span class="pln">
      </span><span class="kwd">return</span><span class="pln"> $q</span><span class="pun">.</span><span class="pln">reject</span><span class="pun">(</span><span class="pln">rejection</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">},</span><span class="pln">



    </span><span class="com">// optional method</span><span class="pln">
    </span><span class="str">'response'</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">response</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">// do something on success</span><span class="pln">
      </span><span class="kwd">return</span><span class="pln"> response</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">},</span><span class="pln">

    </span><span class="com">// optional method</span><span class="pln">
   </span><span class="str">'responseError'</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">rejection</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      </span><span class="com">// do something on error</span><span class="pln">
      </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">canRecover</span><span class="pun">(</span><span class="pln">rejection</span><span class="pun">))</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
        </span><span class="kwd">return</span><span class="pln"> responseOrNewPromise
      </span><span class="pun">}</span><span class="pln">
      </span><span class="kwd">return</span><span class="pln"> $q</span><span class="pun">.</span><span class="pln">reject</span><span class="pun">(</span><span class="pln">rejection</span><span class="pun">);</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
  </span><span class="pun">};</span><span class="pln">
</span><span class="pun">});</span><span class="pln">

$httpProvider</span><span class="pun">.</span><span class="pln">interceptors</span><span class="pun">.</span><span class="pln">push</span><span class="pun">(</span><span class="str">'myHttpInterceptor'</span><span class="pun">);</span><span class="pln">


</span><span class="com">// alternatively, register the interceptor via an anonymous factory</span><span class="pln">
$httpProvider</span><span class="pun">.</span><span class="pln">interceptors</span><span class="pun">.</span><span class="pln">push</span><span class="pun">(</span><span class="kwd">function</span><span class="pun">(</span><span class="pln">$q</span><span class="pun">,</span><span class="pln"> dependency1</span><span class="pun">,</span><span class="pln"> dependency2</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
  </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
   </span><span class="str">'request'</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">config</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
       </span><span class="com">// same as above</span><span class="pln">
    </span><span class="pun">},</span><span class="pln">

    </span><span class="str">'response'</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">response</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
       </span><span class="com">// same as above</span><span class="pln">
    </span><span class="pun">}</span><span class="pln">
  </span><span class="pun">};</span><span class="pln">
</span><span class="pun">});</span></code></pre>
<h2 id="security-considerations">Security Considerations</h2>
<p>When designing web applications, consider security threats from:</p>
<ul>
<li><a href="http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx">JSON vulnerability</a></li>
<li><a href="http://en.wikipedia.org/wiki/Cross-site_request_forgery">XSRF</a></li>
</ul>
<p>Both server and the client must cooperate in order to eliminate these threats. Angular comes
pre-configured with strategies that address these issues, but for this to work backend server
cooperation is required.</p>
<h3 id="json-vulnerability-protection">JSON Vulnerability Protection</h3>
<p>A <a href="http://haacked.com/archive/2008/11/20/anatomy-of-a-subtle-json-vulnerability.aspx">JSON vulnerability</a>
allows third party website to turn your JSON resource URL into
<a href="http://en.wikipedia.org/wiki/JSONP">JSONP</a> request under some conditions. To
counter this your server can prefix all JSON requests with following string <code><span class="str">")]}',\n"</span></code>.
Angular will automatically strip the prefix before processing it as JSON.</p>
<p>For example if your server needs to return:</p>
<pre><code class="lang-js"><span class="pun">[</span><span class="str">'one'</span><span class="pun">,</span><span class="str">'two'</span><span class="pun">]</span></code></pre>
<p>which is vulnerable to attack, your server can return:</p>
<pre><code class="lang-js"><span class="pun">)]}</span><span class="str">',</span><span class="pln">
</span><span class="pun">[</span><span class="str">'one'</span><span class="pun">,</span><span class="str">'two'</span><span class="pun">]</span></code></pre>
<p>Angular will strip the prefix, before processing the JSON.</p>
<h3 id="cross-site-request-forgery-xsrf-protection">Cross Site Request Forgery (XSRF) Protection</h3>
<p><a href="http://en.wikipedia.org/wiki/Cross-site_request_forgery">XSRF</a> is an attack technique by
which the attacker can trick an authenticated user into unknowingly executing actions on your
website. Angular provides a mechanism to counter XSRF. When performing XHR requests, the
$http service reads a token from a cookie (by default, <code><span class="pln">XSRF</span><span class="pun">-</span><span class="pln">TOKEN</span></code>) and sets it as an HTTP
header (<code><span class="pln">X</span><span class="pun">-</span><span class="pln">XSRF</span><span class="pun">-</span><span class="pln">TOKEN</span></code>). Since only JavaScript that runs on your domain could read the
cookie, your server can be assured that the XHR came from JavaScript running on your domain.
The header will not be set for cross-domain requests.</p>
<p>To take advantage of this, your server needs to set a token in a JavaScript readable session
cookie called <code><span class="pln">XSRF</span><span class="pun">-</span><span class="pln">TOKEN</span></code> on the first HTTP GET request. On subsequent XHR requests the
server can verify that the cookie matches <code><span class="pln">X</span><span class="pun">-</span><span class="pln">XSRF</span><span class="pun">-</span><span class="pln">TOKEN</span></code> HTTP header, and therefore be sure
that only JavaScript running on your domain could have sent the request. The token must be
unique for each user and must be verifiable by the server (to prevent the JavaScript from
making up its own tokens). We recommend that the token is a digest of your site's
authentication cookie with a <a href="https://en.wikipedia.org/wiki/Salt_%28cryptography%29">salt</a>
for added security.</p>
<p>The name of the headers can be specified using the xsrfHeaderName and xsrfCookieName
properties of either $httpProvider.defaults at config-time, $http.defaults at run-time,
or the per-request config object.</p>
<p>In order to prevent collisions in environments where multiple Angular apps share the
same domain or subdomain, we recommend that each application uses unique cookie name.</p>

</div>






<div class="ng-scope">
  
  <h2 id="dependencies">Dependencies</h2>
  <ul>
    <li><a href="https://docs.angularjs.org/api/ng/service/$httpBackend"><code><span class="pln">$httpBackend</span></code></a></li><li><a href="https://docs.angularjs.org/api/ng/service/$cacheFactory"><code><span class="pln">$cacheFactory</span></code></a></li><li><a href="https://docs.angularjs.org/api/ng/service/$rootScope"><code><span class="pln">$rootScope</span></code></a></li><li><a href="https://docs.angularjs.org/api/ng/service/$q"><code><span class="pln">$q</span></code></a></li><li><a href="https://docs.angularjs.org/api/auto/service/$injector"><code><span class="pln">$injector</span></code></a></li>
  </ul>
  

    

  <h2 id="usage">Usage</h2>
    
      <p><code><span class="pln">$http</span><span class="pun">(</span><span class="pln">config</span><span class="pun">);</span></code></p>


    

    
<section class="api-section">
  <h3>Arguments</h3>

<table class="variables-matrix input-arguments">
  <thead>
    <tr>
      <th>Param</th>
      <th>Type</th>
      <th>Details</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>
        config
        
        
      </td>
      <td>
        <a href="" class="label type-hint type-hint-object">object</a>
      </td>
      <td>
        <p>Object describing the request to be made and how it should be
   processed. The object has following properties:</p>
<ul>
<li><strong>method</strong> – <code><span class="pun">{</span><span class="kwd">string</span><span class="pun">}</span></code> – HTTP method (e.g. 'GET', 'POST', etc)</li>
<li><strong>url</strong> – <code><span class="pun">{</span><span class="kwd">string</span><span class="pun">}</span></code> – Absolute or relative URL of the resource that is being requested.</li>
<li><strong>params</strong> – <code><span class="pun">{</span><span class="typ">Object</span><span class="pun">.&lt;</span><span class="kwd">string</span><span class="pun">|</span><span class="typ">Object</span><span class="pun">&gt;}</span></code> – Map of strings or objects which will be serialized
with the <code><span class="pln">paramSerializer</span></code> and appended as GET parameters.</li>
<li><strong>data</strong> – <code><span class="pun">{</span><span class="kwd">string</span><span class="pun">|</span><span class="typ">Object</span><span class="pun">}</span></code> – Data to be sent as the request message data.</li>
<li><strong>headers</strong> – <code><span class="pun">{</span><span class="typ">Object</span><span class="pun">}</span></code> – Map of strings or functions which return strings representing
HTTP headers to send to the server. If the return value of a function is null, the
header will not be sent. Functions accept a config object as an argument.</li>
<li><strong>eventHandlers</strong> - <code><span class="pun">{</span><span class="typ">Object</span><span class="pun">}</span></code> - Event listeners to be bound to the XMLHttpRequest object.
To bind events to the XMLHttpRequest upload object, use <code><span class="pln">uploadEventHandlers</span></code>.
The handler will be called in the context of a <code><span class="pln">$apply</span></code> block.</li>
<li><strong>uploadEventHandlers</strong> - <code><span class="pun">{</span><span class="typ">Object</span><span class="pun">}</span></code> - Event listeners to be bound to the XMLHttpRequest upload
object. To bind events to the XMLHttpRequest object, use <code><span class="pln">eventHandlers</span></code>.
The handler will be called in the context of a <code><span class="pln">$apply</span></code> block.</li>
<li><strong>xsrfHeaderName</strong> – <code><span class="pun">{</span><span class="kwd">string</span><span class="pun">}</span></code> – Name of HTTP header to populate with the XSRF token.</li>
<li><strong>xsrfCookieName</strong> – <code><span class="pun">{</span><span class="kwd">string</span><span class="pun">}</span></code> – Name of cookie containing the XSRF token.</li>
<li><strong>transformRequest</strong> –
<code><span class="pun">{</span><span class="kwd">function</span><span class="pun">(</span><span class="pln">data</span><span class="pun">,</span><span class="pln"> headersGetter</span><span class="pun">)|</span><span class="typ">Array</span><span class="pun">.&lt;</span><span class="kwd">function</span><span class="pun">(</span><span class="pln">data</span><span class="pun">,</span><span class="pln"> headersGetter</span><span class="pun">)&gt;}</span></code> –
transform function or an array of such functions. The transform function takes the http
request body and headers and returns its transformed (typically serialized) version.
See <a href="https://docs.angularjs.org/api/ng/service/$http#overriding-the-default-transformations-per-request">Overriding the Default Transformations</a></li>
<li><strong>transformResponse</strong> –
<code><span class="pun">{</span><span class="kwd">function</span><span class="pun">(</span><span class="pln">data</span><span class="pun">,</span><span class="pln"> headersGetter</span><span class="pun">,</span><span class="pln"> status</span><span class="pun">)|</span><span class="typ">Array</span><span class="pun">.&lt;</span><span class="kwd">function</span><span class="pun">(</span><span class="pln">data</span><span class="pun">,</span><span class="pln"> headersGetter</span><span class="pun">,</span><span class="pln"> status</span><span class="pun">)&gt;}</span></code> –
transform function or an array of such functions. The transform function takes the http
response body, headers and status and returns its transformed (typically deserialized) version.
See <a href="https://docs.angularjs.org/api/ng/service/$http#overriding-the-default-transformations-per-request">Overriding the Default Transformations</a></li>
<li><strong>paramSerializer</strong> - <code><span class="pun">{</span><span class="kwd">string</span><span class="pun">|</span><span class="kwd">function</span><span class="pun">(</span><span class="typ">Object</span><span class="pun">&lt;</span><span class="kwd">string</span><span class="pun">,</span><span class="kwd">string</span><span class="pun">&gt;):</span><span class="kwd">string</span><span class="pun">}</span></code> - A function used to
prepare the string representation of request parameters (specified as an object).
If specified as string, it is interpreted as function registered with the
<a href="https://docs.angularjs.org/api/auto/service/$injector">$injector</a>, which means you can create your own serializer
by registering it as a <a href="https://docs.angularjs.org/api/auto/service/$provide#service">service</a>.
The default serializer is the <a href="https://docs.angularjs.org/api/ng/service/$httpParamSerializer">$httpParamSerializer</a>;
alternatively, you can use the <a href="https://docs.angularjs.org/api/ng/service/$httpParamSerializerJQLike">$httpParamSerializerJQLike</a></li>
<li><strong>cache</strong> – <code><span class="pun">{</span><span class="kwd">boolean</span><span class="pun">|</span><span class="typ">Object</span><span class="pun">}</span></code> – A boolean value or object created with
<a href="https://docs.angularjs.org/api/ng/service/$cacheFactory"><code><span class="pln">$cacheFactory</span></code></a> to enable or disable caching of the HTTP response.
See <a href="https://docs.angularjs.org/api/ng/service/$http#caching">$http Caching</a> for more information.</li>
<li><strong>timeout</strong> – <code><span class="pun">{</span><span class="pln">number</span><span class="pun">|</span><span class="typ">Promise</span><span class="pun">}</span></code> – timeout in milliseconds, or <a href="https://docs.angularjs.org/api/ng/service/$q">promise</a>
that should abort the request when resolved.</li>
<li><strong>withCredentials</strong> - <code><span class="pun">{</span><span class="kwd">boolean</span><span class="pun">}</span></code> - whether to set the <code><span class="pln">withCredentials</span></code> flag on the
XHR object. See <a href="https://developer.mozilla.org/docs/Web/HTTP/Access_control_CORS#Requests_with_credentials">requests with credentials</a>
for more information.</li>
<li><strong>responseType</strong> - <code><span class="pun">{</span><span class="kwd">string</span><span class="pun">}</span></code> - see
<a href="https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest#xmlhttprequest-responsetype">XMLHttpRequest.responseType</a>.</li>
</ul>

        
      </td>
    </tr>
    
  </tbody>
</table>

</section>
    
    <h3>Returns</h3>
<table class="variables-matrix return-arguments">
  <tbody><tr>
    <td><a href="" class="label type-hint type-hint-httppromise">HttpPromise</a></td>
    <td><p>Returns a <a href="https://docs.angularjs.org/api/ng/service/$q"><code><span class="typ">Promise</span></code></a> that will be resolved to a response object
                       when the request succeeds or fails.</p>
</td>
  </tr>
</tbody></table>

  
<h2>Methods</h2>
<ul class="methods">
  <li id="get">
    <h3><p><code><span class="kwd">get</span><span class="pun">(</span><span class="pln">url</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">config</span><span class="pun">]);</span></code></p>

</h3>
    <div><p>Shortcut method to perform <code><span class="pln">GET</span></code> request.</p>
</div>

    
    <h4>Parameters</h4>
    
<table class="variables-matrix input-arguments">
  <thead>
    <tr>
      <th>Param</th>
      <th>Type</th>
      <th>Details</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>
        url
        
        
      </td>
      <td>
        <a href="" class="label type-hint type-hint-string">string</a>
      </td>
      <td>
        <p>Relative or absolute URL specifying the destination of the request</p>

        
      </td>
    </tr>
    
    <tr>
      <td>
        config
        
        <div><em>(optional)</em></div>
      </td>
      <td>
        <a href="" class="label type-hint type-hint-object">Object</a>
      </td>
      <td>
        <p>Optional configuration object</p>

        
      </td>
    </tr>
    
  </tbody>
</table>

    

    
    
    
    <h4>Returns</h4>
    <table class="variables-matrix return-arguments">
  <tbody><tr>
    <td><a href="" class="label type-hint type-hint-httppromise">HttpPromise</a></td>
    <td><p>Future object</p>
</td>
  </tr>
</tbody></table>
    

  </li>
  
  <li id="delete">
    <h3><p><code><span class="kwd">delete</span><span class="pun">(</span><span class="pln">url</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">config</span><span class="pun">]);</span></code></p>

</h3>
    <div><p>Shortcut method to perform <code><span class="pln">DELETE</span></code> request.</p>
</div>

    
    <h4>Parameters</h4>
    
<table class="variables-matrix input-arguments">
  <thead>
    <tr>
      <th>Param</th>
      <th>Type</th>
      <th>Details</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>
        url
        
        
      </td>
      <td>
        <a href="" class="label type-hint type-hint-string">string</a>
      </td>
      <td>
        <p>Relative or absolute URL specifying the destination of the request</p>

        
      </td>
    </tr>
    
    <tr>
      <td>
        config
        
        <div><em>(optional)</em></div>
      </td>
      <td>
        <a href="" class="label type-hint type-hint-object">Object</a>
      </td>
      <td>
        <p>Optional configuration object</p>

        
      </td>
    </tr>
    
  </tbody>
</table>

    

    
    
    
    <h4>Returns</h4>
    <table class="variables-matrix return-arguments">
  <tbody><tr>
    <td><a href="" class="label type-hint type-hint-httppromise">HttpPromise</a></td>
    <td><p>Future object</p>
</td>
  </tr>
</tbody></table>
    

  </li>
  
  <li id="head">
    <h3><p><code><span class="pln">head</span><span class="pun">(</span><span class="pln">url</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">config</span><span class="pun">]);</span></code></p>

</h3>
    <div><p>Shortcut method to perform <code><span class="pln">HEAD</span></code> request.</p>
</div>

    
    <h4>Parameters</h4>
    
<table class="variables-matrix input-arguments">
  <thead>
    <tr>
      <th>Param</th>
      <th>Type</th>
      <th>Details</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>
        url
        
        
      </td>
      <td>
        <a href="" class="label type-hint type-hint-string">string</a>
      </td>
      <td>
        <p>Relative or absolute URL specifying the destination of the request</p>

        
      </td>
    </tr>
    
    <tr>
      <td>
        config
        
        <div><em>(optional)</em></div>
      </td>
      <td>
        <a href="" class="label type-hint type-hint-object">Object</a>
      </td>
      <td>
        <p>Optional configuration object</p>

        
      </td>
    </tr>
    
  </tbody>
</table>

    

    
    
    
    <h4>Returns</h4>
    <table class="variables-matrix return-arguments">
  <tbody><tr>
    <td><a href="" class="label type-hint type-hint-httppromise">HttpPromise</a></td>
    <td><p>Future object</p>
</td>
  </tr>
</tbody></table>
    

  </li>
  
  <li id="jsonp">
    <h3><p><code><span class="pln">jsonp</span><span class="pun">(</span><span class="pln">url</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">config</span><span class="pun">]);</span></code></p>

</h3>
    <div><p>Shortcut method to perform <code><span class="pln">JSONP</span></code> request.
If you would like to customise where and how the callbacks are stored then try overriding
or decorating the <a href="https://docs.angularjs.org/api/ng/service/$jsonpCallbacks"><code><span class="pln">$jsonpCallbacks</span></code></a> service.</p>
</div>

    
    <h4>Parameters</h4>
    
<table class="variables-matrix input-arguments">
  <thead>
    <tr>
      <th>Param</th>
      <th>Type</th>
      <th>Details</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>
        url
        
        
      </td>
      <td>
        <a href="" class="label type-hint type-hint-string">string</a>
      </td>
      <td>
        <p>Relative or absolute URL specifying the destination of the request.
                    The name of the callback should be the string <code><span class="pln">JSON_CALLBACK</span></code>.</p>

        
      </td>
    </tr>
    
    <tr>
      <td>
        config
        
        <div><em>(optional)</em></div>
      </td>
      <td>
        <a href="" class="label type-hint type-hint-object">Object</a>
      </td>
      <td>
        <p>Optional configuration object</p>

        
      </td>
    </tr>
    
  </tbody>
</table>

    

    
    
    
    <h4>Returns</h4>
    <table class="variables-matrix return-arguments">
  <tbody><tr>
    <td><a href="" class="label type-hint type-hint-httppromise">HttpPromise</a></td>
    <td><p>Future object</p>
</td>
  </tr>
</tbody></table>
    

  </li>
  
  <li id="post">
    <h3><p><code><span class="pln">post</span><span class="pun">(</span><span class="pln">url</span><span class="pun">,</span><span class="pln"> data</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">config</span><span class="pun">]);</span></code></p>

</h3>
    <div><p>Shortcut method to perform <code><span class="pln">POST</span></code> request.</p>
</div>

    
    <h4>Parameters</h4>
    
<table class="variables-matrix input-arguments">
  <thead>
    <tr>
      <th>Param</th>
      <th>Type</th>
      <th>Details</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>
        url
        
        
      </td>
      <td>
        <a href="" class="label type-hint type-hint-string">string</a>
      </td>
      <td>
        <p>Relative or absolute URL specifying the destination of the request</p>

        
      </td>
    </tr>
    
    <tr>
      <td>
        data
        
        
      </td>
      <td>
        <a href="" class="label type-hint type-hint-object">*</a>
      </td>
      <td>
        <p>Request content</p>

        
      </td>
    </tr>
    
    <tr>
      <td>
        config
        
        <div><em>(optional)</em></div>
      </td>
      <td>
        <a href="" class="label type-hint type-hint-object">Object</a>
      </td>
      <td>
        <p>Optional configuration object</p>

        
      </td>
    </tr>
    
  </tbody>
</table>

    

    
    
    
    <h4>Returns</h4>
    <table class="variables-matrix return-arguments">
  <tbody><tr>
    <td><a href="" class="label type-hint type-hint-httppromise">HttpPromise</a></td>
    <td><p>Future object</p>
</td>
  </tr>
</tbody></table>
    

  </li>
  
  <li id="put">
    <h3><p><code><span class="pln">put</span><span class="pun">(</span><span class="pln">url</span><span class="pun">,</span><span class="pln"> data</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">config</span><span class="pun">]);</span></code></p>

</h3>
    <div><p>Shortcut method to perform <code><span class="pln">PUT</span></code> request.</p>
</div>

    
    <h4>Parameters</h4>
    
<table class="variables-matrix input-arguments">
  <thead>
    <tr>
      <th>Param</th>
      <th>Type</th>
      <th>Details</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>
        url
        
        
      </td>
      <td>
        <a href="" class="label type-hint type-hint-string">string</a>
      </td>
      <td>
        <p>Relative or absolute URL specifying the destination of the request</p>

        
      </td>
    </tr>
    
    <tr>
      <td>
        data
        
        
      </td>
      <td>
        <a href="" class="label type-hint type-hint-object">*</a>
      </td>
      <td>
        <p>Request content</p>

        
      </td>
    </tr>
    
    <tr>
      <td>
        config
        
        <div><em>(optional)</em></div>
      </td>
      <td>
        <a href="" class="label type-hint type-hint-object">Object</a>
      </td>
      <td>
        <p>Optional configuration object</p>

        
      </td>
    </tr>
    
  </tbody>
</table>

    

    
    
    
    <h4>Returns</h4>
    <table class="variables-matrix return-arguments">
  <tbody><tr>
    <td><a href="" class="label type-hint type-hint-httppromise">HttpPromise</a></td>
    <td><p>Future object</p>
</td>
  </tr>
</tbody></table>
    

  </li>
  
  <li id="patch">
    <h3><p><code><span class="pln">patch</span><span class="pun">(</span><span class="pln">url</span><span class="pun">,</span><span class="pln"> data</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="pln">config</span><span class="pun">]);</span></code></p>

</h3>
    <div><p>Shortcut method to perform <code><span class="pln">PATCH</span></code> request.</p>
</div>

    
    <h4>Parameters</h4>
    
<table class="variables-matrix input-arguments">
  <thead>
    <tr>
      <th>Param</th>
      <th>Type</th>
      <th>Details</th>
    </tr>
  </thead>
  <tbody>
    
    <tr>
      <td>
        url
        
        
      </td>
      <td>
        <a href="" class="label type-hint type-hint-string">string</a>
      </td>
      <td>
        <p>Relative or absolute URL specifying the destination of the request</p>

        
      </td>
    </tr>
    
    <tr>
      <td>
        data
        
        
      </td>
      <td>
        <a href="" class="label type-hint type-hint-object">*</a>
      </td>
      <td>
        <p>Request content</p>

        
      </td>
    </tr>
    
    <tr>
      <td>
        config
        
        <div><em>(optional)</em></div>
      </td>
      <td>
        <a href="" class="label type-hint type-hint-object">Object</a>
      </td>
      <td>
        <p>Optional configuration object</p>

        
      </td>
    </tr>
    
  </tbody>
</table>

    

    
    
    
    <h4>Returns</h4>
    <table class="variables-matrix return-arguments">
  <tbody><tr>
    <td><a href="" class="label type-hint type-hint-httppromise">HttpPromise</a></td>
    <td><p>Future object</p>
</td>
  </tr>
</tbody></table>
    

  </li>
  </ul>
  
  
<h2>Properties</h2>
<ul class="properties">
  <li id="pendingRequests">
    <h3><code><span class="pln">pendingRequests</span></code></h3>
    <table class="variables-matrix return-arguments">
  <tbody><tr>
    <td><a href="" class="label type-hint type-hint-array">Array.&lt;Object&gt;</a></td>
    <td><p>Array of config objects for currently pending
  requests. This is primarily meant to be used for debugging purposes.</p>
</td>
  </tr>
</tbody></table>
  </li>
  
  <li id="defaults">
    <h3><code><span class="pln">defaults</span></code></h3>
    <table class="variables-matrix return-arguments">
  <tbody><tr>
    <td></td>
    <td><p>Runtime equivalent of the <code><span class="pln">$httpProvider</span><span class="pun">.</span><span class="pln">defaults</span></code> property. Allows configuration of
default headers, withCredentials as well as request and response transformations.</p>
<p>See "Setting HTTP Headers" and "Transforming Requests and Responses" sections above.</p>
</td>
  </tr>
</tbody></table>
  </li>
  </ul>



  
  <h2 id="example">Example</h2><p>

</p><div>
  <plnkr-opener class="ng-isolate-scope" example-path="examples/example-http-service"><button ng-click="plnkr.open($event)" class="btn pull-right"> <i class="glyphicon glyphicon-edit">&nbsp;</i> Edit in Plunker</button> </plnkr-opener>

  <div class="runnable-example ng-scope" path="examples/example-http-service" module="httpExample" name="http-service"><!-- ngIf: tabs --><nav class="runnable-example-tabs ng-scope" ng-if="tabs">  <!-- ngRepeat: tab in tabs track by $index --><a ng-class="{active:$index==activeTabIndex}" ng-repeat="tab in tabs track by $index" href="" class="btn ng-binding ng-scope active" ng-click="setTab($index)">    index.html  </a><!-- end ngRepeat: tab in tabs track by $index --><a ng-class="{active:$index==activeTabIndex}" ng-repeat="tab in tabs track by $index" href="" class="btn ng-binding ng-scope" ng-click="setTab($index)">    script.js  </a><!-- end ngRepeat: tab in tabs track by $index --><a ng-class="{active:$index==activeTabIndex}" ng-repeat="tab in tabs track by $index" href="" class="btn ng-binding ng-scope" ng-click="setTab($index)">    http-hello.html  </a><!-- end ngRepeat: tab in tabs track by $index --><a ng-class="{active:$index==activeTabIndex}" ng-repeat="tab in tabs track by $index" href="" class="btn ng-binding ng-scope" ng-click="setTab($index)">    protractor.js  </a><!-- end ngRepeat: tab in tabs track by $index --></nav><!-- end ngIf: tabs -->

  
    <div style="display: block;" class="runnable-example-file" name="index.html" language="html" type="html">
      <pre><code><span class="tag">&lt;div</span><span class="pln"> </span><span class="atn">ng-controller</span><span class="pun">=</span><span class="atv">"FetchController"</span><span class="tag">&gt;</span><span class="pln">
  </span><span class="tag">&lt;select</span><span class="pln"> </span><span class="atn">ng-model</span><span class="pun">=</span><span class="atv">"method"</span><span class="pln"> </span><span class="atn">aria-label</span><span class="pun">=</span><span class="atv">"Request method"</span><span class="tag">&gt;</span><span class="pln">
    </span><span class="tag">&lt;option&gt;</span><span class="pln">GET</span><span class="tag">&lt;/option&gt;</span><span class="pln">
    </span><span class="tag">&lt;option&gt;</span><span class="pln">JSONP</span><span class="tag">&lt;/option&gt;</span><span class="pln">
  </span><span class="tag">&lt;/select&gt;</span><span class="pln">
  </span><span class="tag">&lt;input</span><span class="pln"> </span><span class="atn">type</span><span class="pun">=</span><span class="atv">"text"</span><span class="pln"> </span><span class="atn">ng-model</span><span class="pun">=</span><span class="atv">"url"</span><span class="pln"> </span><span class="atn">size</span><span class="pun">=</span><span class="atv">"80"</span><span class="pln"> </span><span class="atn">aria-label</span><span class="pun">=</span><span class="atv">"URL"</span><span class="pln"> </span><span class="tag">/&gt;</span><span class="pln">
  </span><span class="tag">&lt;button</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"fetchbtn"</span><span class="pln"> </span><span class="atn">ng-click</span><span class="pun">=</span><span class="atv">"fetch()"</span><span class="tag">&gt;</span><span class="pln">fetch</span><span class="tag">&lt;/button&gt;&lt;br&gt;</span><span class="pln">
  </span><span class="tag">&lt;button</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"samplegetbtn"</span><span class="pln"> </span><span class="atn">ng-click</span><span class="pun">=</span><span class="atv">"updateModel('GET', 'http-hello.html')"</span><span class="tag">&gt;</span><span class="pln">Sample GET</span><span class="tag">&lt;/button&gt;</span><span class="pln">
  </span><span class="tag">&lt;button</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"samplejsonpbtn"</span><span class="pln">
    </span><span class="atn">ng-click</span><span class="pun">=</span><span class="atv">"updateModel('JSONP',
                  'https://angularjs.org/greet.php?callback=JSON_CALLBACK&amp;name=Super%20Hero')"</span><span class="tag">&gt;</span><span class="pln">
    Sample JSONP
  </span><span class="tag">&lt;/button&gt;</span><span class="pln">
  </span><span class="tag">&lt;button</span><span class="pln"> </span><span class="atn">id</span><span class="pun">=</span><span class="atv">"invalidjsonpbtn"</span><span class="pln">
    </span><span class="atn">ng-click</span><span class="pun">=</span><span class="atv">"updateModel('JSONP', 'https://angularjs.org/doesntexist&amp;callback=JSON_CALLBACK')"</span><span class="tag">&gt;</span><span class="pln">
      Invalid JSONP
    </span><span class="tag">&lt;/button&gt;</span><span class="pln">
  </span><span class="tag">&lt;pre&gt;</span><span class="pln">http status code: {{status}}</span><span class="tag">&lt;/pre&gt;</span><span class="pln">
  </span><span class="tag">&lt;pre&gt;</span><span class="pln">http response data: {{data}}</span><span class="tag">&lt;/pre&gt;</span><span class="pln">
</span><span class="tag">&lt;/div&gt;</span></code></pre>
    </div>
  
    <div style="display: none;" class="runnable-example-file" name="script.js" language="js" type="js">
      <pre><code><span class="pln">angular</span><span class="pun">.</span><span class="kwd">module</span><span class="pun">(</span><span class="str">'httpExample'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[])</span><span class="pln">
</span><span class="pun">.</span><span class="pln">controller</span><span class="pun">(</span><span class="str">'FetchController'</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="str">'$scope'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'$http'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'$templateCache'</span><span class="pun">,</span><span class="pln">
  </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">$scope</span><span class="pun">,</span><span class="pln"> $http</span><span class="pun">,</span><span class="pln"> $templateCache</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    $scope</span><span class="pun">.</span><span class="pln">method </span><span class="pun">=</span><span class="pln"> </span><span class="str">'GET'</span><span class="pun">;</span><span class="pln">
    $scope</span><span class="pun">.</span><span class="pln">url </span><span class="pun">=</span><span class="pln"> </span><span class="str">'http-hello.html'</span><span class="pun">;</span><span class="pln">

    $scope</span><span class="pun">.</span><span class="pln">fetch </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      $scope</span><span class="pun">.</span><span class="pln">code </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">
      $scope</span><span class="pun">.</span><span class="pln">response </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">null</span><span class="pun">;</span><span class="pln">

      $http</span><span class="pun">({</span><span class="pln">method</span><span class="pun">:</span><span class="pln"> $scope</span><span class="pun">.</span><span class="pln">method</span><span class="pun">,</span><span class="pln"> url</span><span class="pun">:</span><span class="pln"> $scope</span><span class="pun">.</span><span class="pln">url</span><span class="pun">,</span><span class="pln"> cache</span><span class="pun">:</span><span class="pln"> $templateCache</span><span class="pun">}).</span><span class="pln">
        </span><span class="kwd">then</span><span class="pun">(</span><span class="kwd">function</span><span class="pun">(</span><span class="pln">response</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
          $scope</span><span class="pun">.</span><span class="pln">status </span><span class="pun">=</span><span class="pln"> response</span><span class="pun">.</span><span class="pln">status</span><span class="pun">;</span><span class="pln">
          $scope</span><span class="pun">.</span><span class="pln">data </span><span class="pun">=</span><span class="pln"> response</span><span class="pun">.</span><span class="pln">data</span><span class="pun">;</span><span class="pln">
        </span><span class="pun">},</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">response</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
          $scope</span><span class="pun">.</span><span class="pln">data </span><span class="pun">=</span><span class="pln"> response</span><span class="pun">.</span><span class="pln">data </span><span class="pun">||</span><span class="pln"> </span><span class="str">'Request failed'</span><span class="pun">;</span><span class="pln">
          $scope</span><span class="pun">.</span><span class="pln">status </span><span class="pun">=</span><span class="pln"> response</span><span class="pun">.</span><span class="pln">status</span><span class="pun">;</span><span class="pln">
      </span><span class="pun">});</span><span class="pln">
    </span><span class="pun">};</span><span class="pln">

    $scope</span><span class="pun">.</span><span class="pln">updateModel </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">(</span><span class="pln">method</span><span class="pun">,</span><span class="pln"> url</span><span class="pun">)</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
      $scope</span><span class="pun">.</span><span class="pln">method </span><span class="pun">=</span><span class="pln"> method</span><span class="pun">;</span><span class="pln">
      $scope</span><span class="pun">.</span><span class="pln">url </span><span class="pun">=</span><span class="pln"> url</span><span class="pun">;</span><span class="pln">
    </span><span class="pun">};</span><span class="pln">
  </span><span class="pun">}]);</span></code></pre>
    </div>
  
    <div style="display: none;" class="runnable-example-file" name="http-hello.html" language="html" type="html">
      <pre><code><span class="typ">Hello</span><span class="pun">,</span><span class="pln"> $http</span><span class="pun">!</span></code></pre>
    </div>
  
    <div style="display: none;" class="runnable-example-file" name="protractor.js" type="protractor" language="js">
      <pre><code><span class="pln">  </span><span class="kwd">var</span><span class="pln"> status </span><span class="pun">=</span><span class="pln"> element</span><span class="pun">(</span><span class="kwd">by</span><span class="pun">.</span><span class="pln">binding</span><span class="pun">(</span><span class="str">'status'</span><span class="pun">));</span><span class="pln">
  </span><span class="kwd">var</span><span class="pln"> data </span><span class="pun">=</span><span class="pln"> element</span><span class="pun">(</span><span class="kwd">by</span><span class="pun">.</span><span class="pln">binding</span><span class="pun">(</span><span class="str">'data'</span><span class="pun">));</span><span class="pln">
  </span><span class="kwd">var</span><span class="pln"> fetchBtn </span><span class="pun">=</span><span class="pln"> element</span><span class="pun">(</span><span class="kwd">by</span><span class="pun">.</span><span class="pln">id</span><span class="pun">(</span><span class="str">'fetchbtn'</span><span class="pun">));</span><span class="pln">
  </span><span class="kwd">var</span><span class="pln"> sampleGetBtn </span><span class="pun">=</span><span class="pln"> element</span><span class="pun">(</span><span class="kwd">by</span><span class="pun">.</span><span class="pln">id</span><span class="pun">(</span><span class="str">'samplegetbtn'</span><span class="pun">));</span><span class="pln">
  </span><span class="kwd">var</span><span class="pln"> invalidJsonpBtn </span><span class="pun">=</span><span class="pln"> element</span><span class="pun">(</span><span class="kwd">by</span><span class="pun">.</span><span class="pln">id</span><span class="pun">(</span><span class="str">'invalidjsonpbtn'</span><span class="pun">));</span><span class="pln">

  it</span><span class="pun">(</span><span class="str">'should make an xhr GET request'</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">function</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    sampleGetBtn</span><span class="pun">.</span><span class="pln">click</span><span class="pun">();</span><span class="pln">
    fetchBtn</span><span class="pun">.</span><span class="pln">click</span><span class="pun">();</span><span class="pln">
    expect</span><span class="pun">(</span><span class="pln">status</span><span class="pun">.</span><span class="pln">getText</span><span class="pun">()).</span><span class="pln">toMatch</span><span class="pun">(</span><span class="str">'200'</span><span class="pun">);</span><span class="pln">
    expect</span><span class="pun">(</span><span class="pln">data</span><span class="pun">.</span><span class="pln">getText</span><span class="pun">()).</span><span class="pln">toMatch</span><span class="pun">(</span><span class="str">/Hello, \$http!/</span><span class="pun">);</span><span class="pln">
  </span><span class="pun">});</span><span class="pln">

</span><span class="com">// Commented out due to flakes. See https://github.com/angular/angular.js/issues/9185</span><span class="pln">
</span><span class="com">// it('should make a JSONP request to angularjs.org', function() {</span><span class="pln">
</span><span class="com">//   var sampleJsonpBtn = element(by.id('samplejsonpbtn'));</span><span class="pln">
</span><span class="com">//   sampleJsonpBtn.click();</span><span class="pln">
</span><span class="com">//   fetchBtn.click();</span><span class="pln">
</span><span class="com">//   expect(status.getText()).toMatch('200');</span><span class="pln">
</span><span class="com">//   expect(data.getText()).toMatch(/Super Hero!/);</span><span class="pln">
</span><span class="com">// });</span><span class="pln">

  it</span><span class="pun">(</span><span class="str">'should make JSONP request to invalid URL and invoke the error handler'</span><span class="pun">,</span><span class="pln">
      </span><span class="kwd">function</span><span class="pun">()</span><span class="pln"> </span><span class="pun">{</span><span class="pln">
    invalidJsonpBtn</span><span class="pun">.</span><span class="pln">click</span><span class="pun">();</span><span class="pln">
    fetchBtn</span><span class="pun">.</span><span class="pln">click</span><span class="pun">();</span><span class="pln">
    expect</span><span class="pun">(</span><span class="pln">status</span><span class="pun">.</span><span class="pln">getText</span><span class="pun">()).</span><span class="pln">toMatch</span><span class="pun">(</span><span class="str">'0'</span><span class="pun">);</span><span class="pln">
    expect</span><span class="pun">(</span><span class="pln">data</span><span class="pun">.</span><span class="pln">getText</span><span class="pun">()).</span><span class="pln">toMatch</span><span class="pun">(</span><span class="str">'Request failed'</span><span class="pun">);</span><span class="pln">
  </span><span class="pun">});</span></code></pre>
    </div>
  

    <iframe class="runnable-example-frame" src="09_AngularJS_API_http-Dateien/index.htm" name="example-http-service"></iframe>
  </div>
</div>


<p></p>

</div>


</div>
        </div>
      </div>
    </section>

    <footer class="footer">
      <div class="container">
        <p class="pull-right"><a back-to-top="">Back to top</a></p>

        <p>
          Super-powered by Google ©2010-2016
          (<a href="https://github.com/angular/angular.js/blob/master/CHANGELOG.md#1.5.8" class="ng-binding" id="version" ng-href="https://github.com/angular/angular.js/blob/master/CHANGELOG.md#1.5.8" ng-bind-template="v1.5.8  arbitrary-fallbacks" title="Changelog of this version of Angular JS">v1.5.8  arbitrary-fallbacks</a>)
        </p>
        <p>
          Code licensed under
          <a href="https://github.com/angular/angular.js/blob/master/LICENSE" target="_blank">The MIT License</a>.
          Documentation licensed under
          <a href="http://creativecommons.org/licenses/by/3.0/" target="_blank">CC BY 3.0</a>.
        </p>
      </div>
    </footer>
  </div>


</body></html>