<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <script src="01_Visual_Studio_Code_Key_Bindings-Dateien/linkid.js" async="" type="text/javascript"></script><script src="01_Visual_Studio_Code_Key_Bindings-Dateien/widgets.js" id="twitter-wjs"></script><script src="01_Visual_Studio_Code_Key_Bindings-Dateien/gtm.js" async=""></script><script src="01_Visual_Studio_Code_Key_Bindings-Dateien/analytics.js" async=""></script><script>
    var isProduction = window.location.hostname === 'code.visualstudio.com';
    var isHomePage = window.location.pathname === '/';
    var isDocsIndex = window.location.pathname.toLowerCase() === '/docs';
    
    function downloadExperiment(experimentId) {
        
        // Copied code from Google analytics
        // except for experimentId variable
        function utmx_section(){}function utmx(){}(function(){var
        k=experimentId,d=document,l=d.location,c=d.cookie;
        if(l.search.indexOf('utm_expid='+k)>0)return;
        function f(n){if(c){var i=c.indexOf(n+'=');if(i>-1){var j=c.
        indexOf(';',i);return escape(c.substring(i+n.length+1,j<0?c.
        length:j))}}}var x=f('__utmx'),xx=f('__utmxx'),h=l.hash;d.write(
        '<sc'+'ript src="'+'http'+(l.protocol=='https:'?'s://ssl':
        '://www')+'.google-analytics.com/ga_exp.js?'+'utmxkey='+k+
        '&utmx='+(x?x:'')+'&utmxx='+(xx?xx:'')+'&utmxtime='+new Date().
        valueOf()+(h?'&utmxhash='+escape(h.substr(1)):'')+
        '" type="text/javascript" charset="utf-8"><\/sc'+'ript>')})();
    
    }
    
    // Remember to create if statements in lower script as well. 
    if (isProduction) {
        if (isHomePage) {
            downloadExperiment('101350005-25');
        }
        if (isDocsIndex) {
            downloadExperiment('101350005-20');
        }
    }
    </script>
    <script>
    // this second script tag matters! Do not remove.
    if (isProduction) {
        if (isHomePage) {
            utmx('url','A/B');
        }
        if (isDocsIndex) {
            utmx('url','A/B');
        }
    }
    
    </script>    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="google-site-verification" content="cn5-gurGUvjtlzniBhOIPjfKHzuAplh_R9Ju9tuL0DM">
    <!-- Twitter and Facebook OpenGraph Metadata-->
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:site" content="@code">
    	<meta name="description" content="Here you will find the complete list of key bindings for Visual Studio Code and how to change them.">
	<meta name="keywords" content="">
    <meta name="ms.prod" content="vs-code">
    <meta name="ms.TOCTitle" content="Key Bindings">
    <meta name="ms.ContentId" content="045980C1-62C7-4E8E-8CE4-BAD722FFE31E">
    <meta name="ms.date" content="8/4/2016">
    <meta name="ms.topic" content="article">
	<!-- Twitter and Facebook OpenGraph Metadata-->
    <meta name="twitter:card" content="summary_large_image">
    <meta property="og:url" content="http://code.visualstudio.com/docs/customization/keybindings">
    <meta property="og:type" content="article">
    <meta property="og:title" content="Visual Studio Code Key Bindings">
    <meta property="og:description" content="Here you will find the complete list of key bindings for Visual Studio Code and how to change them.">
    
    <meta property="og:image" content="http://code.visualstudio.com/opengraphimg/opengraph-docs.png">
    

    <link rel="shortcut icon" href="https://code.visualstudio.com/images/favicon.ico">
    <title>Visual Studio Code Key Bindings</title>

    <!-- TOFIX Not sure why bower isn't pulling this in-->
    <link rel="stylesheet" type="text/css" href="01_Visual_Studio_Code_Key_Bindings-Dateien/bootstrap.css">
    <!-- inject:css -->
    <link rel="stylesheet" href="01_Visual_Studio_Code_Key_Bindings-Dateien/vendor.css">
    <link rel="stylesheet" href="01_Visual_Studio_Code_Key_Bindings-Dateien/main.css">
    <!-- endinject -->
    <!--Google Analytics-->
    <script>
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
    </script>
    <!-- End Google Analytics -->
    <script>
    var appInsights=window.appInsights||function(config){
        function r(config){t[config]=function(){var i=arguments;t.queue.push(function(){t[config].apply(t,i)})}}var t={config:config},u=document,e=window,o="script",s=u.createElement(o),i,f;for(s.src=config.url||"//az416426.vo.msecnd.net/scripts/a/ai.0.js",u.getElementsByTagName(o)[0].parentNode.appendChild(s),t.cookie=u.cookie,t.queue=[],i=["Event","Exception","Metric","PageView","Trace"];i.length;)r("track"+i.pop());return r("setAuthenticatedUserContext"),r("clearAuthenticatedUserContext"),config.disableExceptionTracking||(i="onerror",r("_"+i),f=e[i],e[i]=function(config,r,u,e,o){var s=f&&f(config,r,u,e,o);return s!==!0&&t["_"+i](config,r,u,e,o),s}),t
    }({
        instrumentationKey:"f18193ef-b93a-4f73-b640-e2ddd40507ae"
    });
    
    window.appInsights=appInsights;
    appInsights.trackPageView();
    </script><script src="01_Visual_Studio_Code_Key_Bindings-Dateien/ai.js"></script>
    
    <!-- Google Tag Manager -->
    <noscript><iframe src="//www.googletagmanager.com/ns.html?id=GTM-NK783Z"
    height="0" width="0" style="display:none;visibility:hidden"></iframe></noscript>
    <script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
    new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
    j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
    '//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
    })(window,document,'script','dataLayer','GTM-NK783Z');</script>
    <!-- End Google Tag Manager -->
    
    
    <link rel="alternate" type="application/atom+xml" title="RSS Feed for code.visualstudio.com" href="https://code.visualstudio.com/feed.xml">
<script src="01_Visual_Studio_Code_Key_Bindings-Dateien/button.js" async="" charset="utf-8" type="text/javascript"></script></head>
<body class="win">
    <!-- WEDCS -->
    <script type="text/javascript">
        // Defaults for varAutoFirePV and varCustomerTracking seem to work. varClickTracking doesn't, so called explicitly.
        var varClickTracking = 1;
        var Route = "20052";
        document.write("<script type='text/javascript' src='" + (window.location.protocol) + "//c.microsoft.com/ms.js'" + "'><\/script>");
    </script><script type="text/javascript" src="01_Visual_Studio_Code_Key_Bindings-Dateien/ms.js" '=""></script>
    <!-- End WEDCS -->
    <div itemscope="" itemtype="http://schema.org/SoftwareApplication">
            <a id="skip-to-content" class="link-button" href="#main-content">Skip to content<i>&nbsp;</i><span class="glyphicon glyphicon-menu-down"></span></a>
            <div class="navbar navbar-inverse ">
                <nav role="navigation">
                    <div class="container">
                        <div class="nav navbar-header">
                            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                                    <span class="icon-bar"></span>
                                    <span class="icon-bar"></span>
                                    <span class="icon-bar"></span>
                                </button>
                            <a class="navbar-brand" href="https://code.visualstudio.com/"><span itemprop="name">Visual Studio Code</span></a>
                        </div>
                        <div class="navbar-collapse collapse">
                            <ul class="nav navbar-nav navbar-left">
                                <li class="active"><a id="nav-docs" href="https://code.visualstudio.com/Docs">Docs</a></li>
                                <li><a id="nav-updates" href="https://code.visualstudio.com/Updates">Updates</a></li>
                                <li><a id="nav-blogs" href="https://code.visualstudio.com/blogs">Blog</a></li>
                                <li><a href="https://marketplace.visualstudio.com/VSCode" target="_blank" id="nav-extensions">Extensions</a></li>
                                <li><a id="nav-faqs" href="https://code.visualstudio.com/Docs/FAQ">FAQ</a></li>
                                <li class="visible-xs"><a href="https://www.github.com/Microsoft/vscode" target="_blank">GitHub Project</a></li>
                                <li class="search visible-xs"><a href="https://code.visualstudio.com/Search">Search</a></li>
                            </ul>
            
                            <ul class="nav navbar-nav navbar-right">
                                <li>
                                    <a href="https://code.visualstudio.com/Search" title="Search" class="btn search-btn" id="nav-search">
                                        <img src="01_Visual_Studio_Code_Key_Bindings-Dateien/search.svg" alt="Search" height="16px" width="16px">
                                    </a>
                                </li>
                                <li class="search">
                                    <form class="nav-search search-form">
                                        <div class="input-group">
                                            <input name="q" class="search-box form-control" placeholder="Search Docs" type="text">
                                            <span class="input-group-btn">
                                                <button tabindex="-1" class="btn" type="submit">
                                                    <img src="01_Visual_Studio_Code_Key_Bindings-Dateien/search.svg" alt="Search" height="16px" width="16px">
                                                </button>
                                            </span>
                                        </div>
                                    </form>                    </li>
                                <!-- this was hiden in the home and download page, keeping it for now -->
                                <li><a itemprop="downloadUrl" class="link-button" href="https://code.visualstudio.com/Download" id="nav-download"><img src="01_Visual_Studio_Code_Key_Bindings-Dateien/download.svg" alt="Download VS Code" height="16px" width="16px"><span class="hidden-sm">Download</span></a></li>
                            </ul>
                        </div>
                    </div>
                </nav>
            </div>            <div class="updates-banner  ">
                <div class="container">
                    <p class="message"><a href="https://code.visualstudio.com/Updates" id="banner-link-updates">Version <span itemprop="softwareVersion">1.4</span></a> is now available! Read about the new features and fixes in July.</p>
                </div>
                <div role="button" title="Dismiss this update" class="dismiss-btn" id="banner-dismiss-btn"><span class="sr-only">Dismiss this update</span><span aria-hidden="true" class="glyph-icon"></span></div>
            </div>        <div role="main" id="main-content">
			

<div class="container body-content docs">
    <div class="row">
        <div class="col-md-2">
            <nav id="docs-navbar" class="docs-nav visible-md visible-lg affix">
            	<ul class="nav" id="main-nav">
            		<li><a class="docs-home" href="https://code.visualstudio.com/docs">Overview</a></li>
            		
            			
            				<li class="panel collapsed">
            					<a class="area" href="#setup-articles" data-parent="#main-nav" data-toggle="collapse">Setup</a>
            					<ul id="setup-articles" class="collapse ">
            					
            						<li><a href="https://code.visualstudio.com/docs/setup/setup-overview">Overview</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/setup/osx">OS X</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/setup/linux">Linux</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/setup/windows">Windows</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/setup/additional-components">Additional Components</a></li>
            					
            					</ul>
            				</li>
            			
            		
            			
            				<li class="panel collapsed">
            					<a class="area" href="#editor-articles" data-parent="#main-nav" data-toggle="collapse">Editor</a>
            					<ul id="editor-articles" class="collapse ">
            					
            						<li><a href="https://code.visualstudio.com/docs/editor/codebasics">The Basics</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/editor/extension-gallery">Extension Marketplace</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/editor/editingevolved">Editing Evolved</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/editor/versioncontrol">Version Control</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/editor/debugging">Debugging</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/editor/tasks">Tasks</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/editor/integrated-terminal">Integrated Terminal</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/editor/tabs">Tabs</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/editor/accessibility">Accessibility</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/editor/whyvscode">Why VS Code</a></li>
            					
            					</ul>
            				</li>
            			
            		
            			
            				<li class="panel active expanded">
            					<a class="area" href="#customization-articles" data-parent="#main-nav" data-toggle="collapse">Customization</a>
            					<ul id="customization-articles" class="collapse in">
            					
            						<li><a href="https://code.visualstudio.com/docs/customization/overview">Overview</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/customization/userandworkspace">User and Workspace Settings</a></li>
            					
            						<li class="active"><a href="https://code.visualstudio.com/docs/customization/keybindings">Key Bindings</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/customization/userdefinedsnippets">Snippets</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/customization/colorizer">Colorizer</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/customization/themes">Themes</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/customization/locales">Display Language</a></li>
            					
            					</ul>
            				</li>
            			
            		
            			
            				<li class="panel collapsed">
            					<a class="area" href="#languages-articles" data-parent="#main-nav" data-toggle="collapse">Languages</a>
            					<ul id="languages-articles" class="collapse ">
            					
            						<li><a href="https://code.visualstudio.com/docs/languages/overview">Overview</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/languages/javascript">JavaScript</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/languages/csharp">C#</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/languages/cpp">C++</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/languages/json">JSON</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/languages/html">HTML</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/languages/php">PHP</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/languages/python">Python</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/languages/markdown">Markdown</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/languages/typescript">TypeScript</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/languages/css">CSS, Sass and Less</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/languages/dockerfile">Dockerfile</a></li>
            					
            					</ul>
            				</li>
            			
            		
            			
            				<li class="panel collapsed">
            					<a class="area" href="#runtimes-articles" data-parent="#main-nav" data-toggle="collapse">Runtimes</a>
            					<ul id="runtimes-articles" class="collapse ">
            					
            						<li><a href="https://code.visualstudio.com/docs/runtimes/nodejs">Node.js</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/runtimes/dotnet">.NET Core</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/runtimes/unity">Unity</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/runtimes/office">Office</a></li>
            					
            					</ul>
            				</li>
            			
            		
            			
            				<li class="panel collapsed">
            					<a class="area" href="#extensions-articles" data-parent="#main-nav" data-toggle="collapse">Extensions</a>
            					<ul id="extensions-articles" class="collapse ">
            					
            						<li><a href="https://code.visualstudio.com/docs/extensions/overview">Overview</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/extensions/example-hello-world">Example-Hello World</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/extensions/example-word-count">Example-Word Count</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/extensions/example-language-server">Example-Language Server</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/extensions/example-debuggers">Example-Debuggers</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/extensions/patterns-and-principles">Principles and Patterns</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/extensions/debugging-extensions">Running and Debugging Extensions</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/extensions/install-extension">Installing Extensions</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/extensions/testing-extensions">Testing Extensions</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/extensions/our-approach">Our Approach</a></li>
            					
            					</ul>
            				</li>
            			
            		
            			
            				<li class="panel collapsed">
            					<a class="area" href="#extensionapi-articles" data-parent="#main-nav" data-toggle="collapse">Extensibility Reference</a>
            					<ul id="extensionapi-articles" class="collapse ">
            					
            						<li><a href="https://code.visualstudio.com/docs/extensionAPI/overview">Overview</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/extensionAPI/extension-manifest">Extension Manifest</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/extensionAPI/extension-points">Contribution Points</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/extensionAPI/activation-events">Activation Events</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/extensionAPI/vscode-api">API vscode namespace</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/extensionAPI/vscode-api-commands">API complex commands</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/extensionAPI/api-debugging">API debugging</a></li>
            					
            					</ul>
            				</li>
            			
            		
            			
            				<li class="panel collapsed">
            					<a class="area" href="#tools-articles" data-parent="#main-nav" data-toggle="collapse">Tools</a>
            					<ul id="tools-articles" class="collapse ">
            					
            						<li><a href="https://code.visualstudio.com/docs/tools/vscecli">Publishing Tool</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/tools/yocode">Extension Generator</a></li>
            					
            						<li><a href="https://code.visualstudio.com/docs/tools/samples">Samples</a></li>
            					
            					</ul>
            				</li>
            			
            		
            			
            		
            	</ul>
            </nav>
            <nav id="small-nav" class="docs-nav hidden-md hidden-lg">
            	<h4>Topics</h4>
            	<select id="small-nav-dropdown">
            		<option selected="selected" value="/docs">Overview</option>
            		
            			
            				<optgroup label="Setup">
            				
            					<option value="/docs/setup/setup-overview">Overview</option>
            				
            					<option value="/docs/setup/osx">OS X</option>
            				
            					<option value="/docs/setup/linux">Linux</option>
            				
            					<option value="/docs/setup/windows">Windows</option>
            				
            					<option value="/docs/setup/additional-components">Additional Components</option>
            				
            				</optgroup>
            			
            		
            			
            				<optgroup label="Editor">
            				
            					<option value="/docs/editor/codebasics">The Basics</option>
            				
            					<option value="/docs/editor/extension-gallery">Extension Marketplace</option>
            				
            					<option value="/docs/editor/editingevolved">Editing Evolved</option>
            				
            					<option value="/docs/editor/versioncontrol">Version Control</option>
            				
            					<option value="/docs/editor/debugging">Debugging</option>
            				
            					<option value="/docs/editor/tasks">Tasks</option>
            				
            					<option value="/docs/editor/integrated-terminal">Integrated Terminal</option>
            				
            					<option value="/docs/editor/tabs">Tabs</option>
            				
            					<option value="/docs/editor/accessibility">Accessibility</option>
            				
            					<option value="/docs/editor/whyvscode">Why VS Code</option>
            				
            				</optgroup>
            			
            		
            			
            				<optgroup label="Customization">
            				
            					<option value="/docs/customization/overview">Overview</option>
            				
            					<option value="/docs/customization/userandworkspace">User and Workspace Settings</option>
            				
            					<option value="/docs/customization/keybindings" "selected"="">Key Bindings</option>
            				
            					<option value="/docs/customization/userdefinedsnippets">Snippets</option>
            				
            					<option value="/docs/customization/colorizer">Colorizer</option>
            				
            					<option value="/docs/customization/themes">Themes</option>
            				
            					<option value="/docs/customization/locales">Display Language</option>
            				
            				</optgroup>
            			
            		
            			
            				<optgroup label="Languages">
            				
            					<option value="/docs/languages/overview">Overview</option>
            				
            					<option value="/docs/languages/javascript">JavaScript</option>
            				
            					<option value="/docs/languages/csharp">C#</option>
            				
            					<option value="/docs/languages/cpp">C++</option>
            				
            					<option value="/docs/languages/json">JSON</option>
            				
            					<option value="/docs/languages/html">HTML</option>
            				
            					<option value="/docs/languages/php">PHP</option>
            				
            					<option value="/docs/languages/python">Python</option>
            				
            					<option value="/docs/languages/markdown">Markdown</option>
            				
            					<option value="/docs/languages/typescript">TypeScript</option>
            				
            					<option value="/docs/languages/css">CSS, Sass and Less</option>
            				
            					<option value="/docs/languages/dockerfile">Dockerfile</option>
            				
            				</optgroup>
            			
            		
            			
            				<optgroup label="Runtimes">
            				
            					<option value="/docs/runtimes/nodejs">Node.js</option>
            				
            					<option value="/docs/runtimes/dotnet">.NET Core</option>
            				
            					<option value="/docs/runtimes/unity">Unity</option>
            				
            					<option value="/docs/runtimes/office">Office</option>
            				
            				</optgroup>
            			
            		
            			
            				<optgroup label="Extensions">
            				
            					<option value="/docs/extensions/overview">Overview</option>
            				
            					<option value="/docs/extensions/example-hello-world">Example-Hello World</option>
            				
            					<option value="/docs/extensions/example-word-count">Example-Word Count</option>
            				
            					<option value="/docs/extensions/example-language-server">Example-Language Server</option>
            				
            					<option value="/docs/extensions/example-debuggers">Example-Debuggers</option>
            				
            					<option value="/docs/extensions/patterns-and-principles">Principles and Patterns</option>
            				
            					<option value="/docs/extensions/debugging-extensions">Running and Debugging Extensions</option>
            				
            					<option value="/docs/extensions/install-extension">Installing Extensions</option>
            				
            					<option value="/docs/extensions/testing-extensions">Testing Extensions</option>
            				
            					<option value="/docs/extensions/our-approach">Our Approach</option>
            				
            				</optgroup>
            			
            		
            			
            				<optgroup label="Extensibility Reference">
            				
            					<option value="/docs/extensionAPI/overview">Overview</option>
            				
            					<option value="/docs/extensionAPI/extension-manifest">Extension Manifest</option>
            				
            					<option value="/docs/extensionAPI/extension-points">Contribution Points</option>
            				
            					<option value="/docs/extensionAPI/activation-events">Activation Events</option>
            				
            					<option value="/docs/extensionAPI/vscode-api">API vscode namespace</option>
            				
            					<option value="/docs/extensionAPI/vscode-api-commands">API complex commands</option>
            				
            					<option value="/docs/extensionAPI/api-debugging">API debugging</option>
            				
            				</optgroup>
            			
            		
            			
            				<optgroup label="Tools">
            				
            					<option value="/docs/tools/vscecli">Publishing Tool</option>
            				
            					<option value="/docs/tools/yocode">Extension Generator</option>
            				
            					<option value="/docs/tools/samples">Samples</option>
            				
            				</optgroup>
            			
            		
            			
            		
            	</select>
            </nav>		</div>
		<div class="col-sm-9 col-md-8 body">
			<div class="edit-github pull-right">
				<a href="https://github.com/Microsoft/vscode-docs/blob/master/docs/customization/keybindings.md" tabindex="-1">
					<button type="button" class="btn btn-default"><span class="glyphicon glyphicon-pencil"></span><i>&nbsp;</i><span class="hidden-xs">Edit</span></button>
				</a>
			</div>
			<h1>Key Bindings for Visual Studio Code</h1>
<p>Visual Studio Code lets you perform most tasks directly from the 
keyboard.  This page lists out the default bindings and describes how 
you can update them.</p>
<blockquote>
<p><strong>Note:</strong> If you visit this page on a Mac, you will see 
the key bindings for the Mac.  If you visit using Windows or Linux, you 
will see the keys for that OS. If you need the key binding for another 
OS, hover your mouse over the key you are interested in.</p>
</blockquote>
<blockquote>
<p><strong>Note:</strong> The following keys are rendered assuming a standard US keyboard layout. If you use a different keyboard layout, please <a href="https://code.visualstudio.com/docs/customization/keybindings#_keyboard-layouts">read below</a>.</p>
</blockquote>
<h2 id="_basic-editing" data-needslink="_basic-editing">Basic Editing<a class="hash-link hidden" href="#_basic-editing">#</a></h2>
<table class="table table-striped">
<thead>
<tr>
<th>Key</th>
<th>Command</th>
<th>Command id</th>
</tr>
</thead>
<tbody>
<tr>
<td><span title="OSX: ⌘X, Linux: Ctrl+X" class="dynamic-keybinding keybinding win" data-osx="⌘X" data-win="Ctrl+X" data-linux="Ctrl+X">Ctrl+X</span></td>
<td>Cut line (empty selection)</td>
<td><code>editor.action.clipboardCutAction</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘C, Linux: Ctrl+C" class="dynamic-keybinding keybinding win" data-osx="⌘C" data-win="Ctrl+C" data-linux="Ctrl+C">Ctrl+C</span></td>
<td>Copy line (empty selection)</td>
<td><code>editor.action.clipboardCopyAction</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧⌘K, Linux: Ctrl+Shift+K" class="dynamic-keybinding keybinding win" data-osx="⇧⌘K" data-win="Ctrl+Shift+K" data-linux="Ctrl+Shift+K">Ctrl+Shift+K</span></td>
<td>Delete Line</td>
<td><code>editor.action.deleteLines</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘Enter, Linux: Ctrl+Enter" class="dynamic-keybinding keybinding win" data-osx="⌘Enter" data-win="Ctrl+Enter" data-linux="Ctrl+Enter">Ctrl+Enter</span></td>
<td>Insert Line Below</td>
<td><code>editor.action.insertLineAfter</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧⌘Enter, Linux: Ctrl+Shift+Enter" class="dynamic-keybinding keybinding win" data-osx="⇧⌘Enter" data-win="Ctrl+Shift+Enter" data-linux="Ctrl+Shift+Enter">Ctrl+Shift+Enter</span></td>
<td>Insert Line Above</td>
<td><code>editor.action.insertLineBefore</code></td>
</tr>
<tr>
<td><span title="OSX: ⌥↓, Linux: Alt+Down" class="dynamic-keybinding keybinding win" data-osx="⌥↓" data-win="Alt+Down" data-linux="Alt+Down">Alt+Down</span></td>
<td>Move Line Down</td>
<td><code>editor.action.moveLinesDownAction</code></td>
</tr>
<tr>
<td><span title="OSX: ⌥↑, Linux: Alt+Up" class="dynamic-keybinding keybinding win" data-osx="⌥↑" data-win="Alt+Up" data-linux="Alt+Up">Alt+Up</span></td>
<td>Move Line Up</td>
<td><code>editor.action.moveLinesUpAction</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧⌥↓, Linux: Ctrl+Shift+Alt+Down" class="dynamic-keybinding keybinding win" data-osx="⇧⌥↓" data-win="Shift+Alt+Down" data-linux="Ctrl+Shift+Alt+Down">Shift+Alt+Down</span></td>
<td>Copy Line Down</td>
<td><code>editor.action.copyLinesDownAction</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧⌥↑, Linux: Ctrl+Shift+Alt+Up" class="dynamic-keybinding keybinding win" data-osx="⇧⌥↑" data-win="Shift+Alt+Up" data-linux="Ctrl+Shift+Alt+Up">Shift+Alt+Up</span></td>
<td>Copy Line Up</td>
<td><code>editor.action.copyLinesUpAction</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘D, Linux: Ctrl+D" class="dynamic-keybinding keybinding win" data-osx="⌘D" data-win="Ctrl+D" data-linux="Ctrl+D">Ctrl+D</span></td>
<td>Add Selection To Next Find Match</td>
<td><code>editor.action.addSelectionToNextFindMatch</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘K ⌘D, Linux: Ctrl+K Ctrl+D" class="dynamic-keybinding keybinding win" data-osx="⌘K ⌘D" data-win="Ctrl+K Ctrl+D" data-linux="Ctrl+K Ctrl+D">Ctrl+K Ctrl+D</span></td>
<td>Move Last Selection To Next Find Match</td>
<td><code>editor.action.moveSelectionToNextFindMatch</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘U, Linux: Ctrl+U" class="dynamic-keybinding keybinding win" data-osx="⌘U" data-win="Ctrl+U" data-linux="Ctrl+U">Ctrl+U</span></td>
<td>Undo last cursor operation</td>
<td><code>cursorUndo</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧⌥I, Linux: Shift+Alt+I" class="dynamic-keybinding keybinding win" data-osx="⇧⌥I" data-win="Shift+Alt+I" data-linux="Shift+Alt+I">Shift+Alt+I</span></td>
<td>Insert cursor at end of each line selected</td>
<td><code>editor.action.insertCursorAtEndOfEachLineSelected</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧⌘L, Linux: Ctrl+Shift+L" class="dynamic-keybinding keybinding win" data-osx="⇧⌘L" data-win="Ctrl+Shift+L" data-linux="Ctrl+Shift+L">Ctrl+Shift+L</span></td>
<td>Select all occurrences of current selection</td>
<td><code>editor.action.selectHighlights</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘F2, Linux: Ctrl+F2" class="dynamic-keybinding keybinding win" data-osx="⌘F2" data-win="Ctrl+F2" data-linux="Ctrl+F2">Ctrl+F2</span></td>
<td>Select all occurrences of current word</td>
<td><code>editor.action.changeAll</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘I, Linux: Ctrl+I" class="dynamic-keybinding keybinding win" data-osx="⌘I" data-win="Ctrl+I" data-linux="Ctrl+I">Ctrl+I</span></td>
<td>Select current line</td>
<td><code>expandLineSelection</code></td>
</tr>
<tr>
<td><span title="OSX: ⌥⌘↓, Linux: Shift+Alt+Down" class="dynamic-keybinding keybinding win" data-osx="⌥⌘↓" data-win="Ctrl+Alt+Down" data-linux="Shift+Alt+Down">Ctrl+Alt+Down</span></td>
<td>Insert Cursor Below</td>
<td><code>editor.action.insertCursorBelow</code></td>
</tr>
<tr>
<td><span title="OSX: ⌥⌘↑, Linux: Shift+Alt+Up" class="dynamic-keybinding keybinding win" data-osx="⌥⌘↑" data-win="Ctrl+Alt+Up" data-linux="Shift+Alt+Up">Ctrl+Alt+Up</span></td>
<td>Insert Cursor Above</td>
<td><code>editor.action.insertCursorAbove</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧⌘\, Linux: Ctrl+Shift+\" class="dynamic-keybinding keybinding win" data-osx="⇧⌘\" data-win="Ctrl+Shift+\" data-linux="Ctrl+Shift+\">Ctrl+Shift+\</span></td>
<td>Jump to matching bracket</td>
<td><code>editor.action.jumpToBracket</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘], Linux: Ctrl+]" class="dynamic-keybinding keybinding win" data-osx="⌘]" data-win="Ctrl+]" data-linux="Ctrl+]">Ctrl+]</span></td>
<td>Indent Line</td>
<td><code>editor.action.indentLines</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘[, Linux: Ctrl+[" class="dynamic-keybinding keybinding win" data-osx="⌘[" data-win="Ctrl+[" data-linux="Ctrl+[">Ctrl+[</span></td>
<td>Outdent Line</td>
<td><code>editor.action.outdentLines</code></td>
</tr>
<tr>
<td><span title="OSX: Home, Linux: Home" class="dynamic-keybinding keybinding win" data-osx="Home" data-win="Home" data-linux="Home">Home</span></td>
<td>Go to Beginning of Line</td>
<td><code>cursorHome</code></td>
</tr>
<tr>
<td><span title="OSX: End, Linux: End" class="dynamic-keybinding keybinding win" data-osx="End" data-win="End" data-linux="End">End</span></td>
<td>Go to End of Line</td>
<td><code>cursorEnd</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘↓, Linux: Ctrl+End" class="dynamic-keybinding keybinding win" data-osx="⌘↓" data-win="Ctrl+End" data-linux="Ctrl+End">Ctrl+End</span></td>
<td>Go to End of File</td>
<td><code>cursorBottom</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘↑, Linux: Ctrl+Home" class="dynamic-keybinding keybinding win" data-osx="⌘↑" data-win="Ctrl+Home" data-linux="Ctrl+Home">Ctrl+Home</span></td>
<td>Go to Beginning of File</td>
<td><code>cursorTop</code></td>
</tr>
<tr>
<td><span title="OSX: ⌃PageDown, Linux: Ctrl+Down" class="dynamic-keybinding keybinding win" data-osx="⌃PageDown" data-win="Ctrl+Down" data-linux="Ctrl+Down">Ctrl+Down</span></td>
<td>Scroll Line Down</td>
<td><code>scrollLineDown</code></td>
</tr>
<tr>
<td><span title="OSX: ⌃PageUp, Linux: Ctrl+Up" class="dynamic-keybinding keybinding win" data-osx="⌃PageUp" data-win="Ctrl+Up" data-linux="Ctrl+Up">Ctrl+Up</span></td>
<td>Scroll Line Up</td>
<td><code>scrollLineUp</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘PageDown, Linux: Alt+PageDown" class="dynamic-keybinding keybinding win" data-osx="⌘PageDown" data-win="Alt+PageDown" data-linux="Alt+PageDown">Alt+PageDown</span></td>
<td>Scroll Page Down</td>
<td><code>scrollPageDown</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘PageUp, Linux: Alt+PageUp" class="dynamic-keybinding keybinding win" data-osx="⌘PageUp" data-win="Alt+PageUp" data-linux="Alt+PageUp">Alt+PageUp</span></td>
<td>Scroll Page Up</td>
<td><code>scrollPageUp</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧⌘[, Linux: Ctrl+Shift+[" class="dynamic-keybinding keybinding win" data-osx="⇧⌘[" data-win="Ctrl+Shift+[" data-linux="Ctrl+Shift+[">Ctrl+Shift+[</span></td>
<td>Fold (collapse) region</td>
<td><code>editor.fold</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧⌘], Linux: Ctrl+Shift+]" class="dynamic-keybinding keybinding win" data-osx="⇧⌘]" data-win="Ctrl+Shift+]" data-linux="Ctrl+Shift+]">Ctrl+Shift+]</span></td>
<td>Unfold (uncollapse) region</td>
<td><code>editor.unfold</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘K ⌘[, Linux: Ctrl+K Ctrl+[" class="dynamic-keybinding keybinding win" data-osx="⌘K ⌘[" data-win="Ctrl+K Ctrl+[" data-linux="Ctrl+K Ctrl+[">Ctrl+K Ctrl+[</span></td>
<td>Fold (collapse) all subregions</td>
<td><code>editor.foldRecursively</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘K ⌘], Linux: Ctrl+K Ctrl+]" class="dynamic-keybinding keybinding win" data-osx="⌘K ⌘]" data-win="Ctrl+K Ctrl+]" data-linux="Ctrl+K Ctrl+]">Ctrl+K Ctrl+]</span></td>
<td>Unfold (uncollapse) all subregions</td>
<td><code>editor.unfoldRecursively</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘K ⌘0, Linux: Ctrl+K Ctrl+0" class="dynamic-keybinding keybinding win" data-osx="⌘K ⌘0" data-win="Ctrl+K Ctrl+0" data-linux="Ctrl+K Ctrl+0">Ctrl+K Ctrl+0</span></td>
<td>Fold (collapse) all regions</td>
<td><code>editor.foldAll</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘K ⌘J, Linux: Ctrl+K Ctrl+J" class="dynamic-keybinding keybinding win" data-osx="⌘K ⌘J" data-win="Ctrl+K Ctrl+J" data-linux="Ctrl+K Ctrl+J">Ctrl+K Ctrl+J</span></td>
<td>Unfold (uncollapse) all regions</td>
<td><code>editor.unfoldAll</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘K ⌘C, Linux: Ctrl+K Ctrl+C" class="dynamic-keybinding keybinding win" data-osx="⌘K ⌘C" data-win="Ctrl+K Ctrl+C" data-linux="Ctrl+K Ctrl+C">Ctrl+K Ctrl+C</span></td>
<td>Add Line Comment</td>
<td><code>editor.action.addCommentLine</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘K ⌘U, Linux: Ctrl+K Ctrl+U" class="dynamic-keybinding keybinding win" data-osx="⌘K ⌘U" data-win="Ctrl+K Ctrl+U" data-linux="Ctrl+K Ctrl+U">Ctrl+K Ctrl+U</span></td>
<td>Remove Line Comment</td>
<td><code>editor.action.removeCommentLine</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘/, Linux: Ctrl+/" class="dynamic-keybinding keybinding win" data-osx="⌘/" data-win="Ctrl+/" data-linux="Ctrl+/">Ctrl+/</span></td>
<td>Toggle Line Comment</td>
<td><code>editor.action.commentLine</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧⌥A, Linux: Ctrl+Shift+A" class="dynamic-keybinding keybinding win" data-osx="⇧⌥A" data-win="Shift+Alt+A" data-linux="Ctrl+Shift+A">Shift+Alt+A</span></td>
<td>Toggle Block Comment</td>
<td><code>editor.action.blockComment</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘F, Linux: Ctrl+F" class="dynamic-keybinding keybinding win" data-osx="⌘F" data-win="Ctrl+F" data-linux="Ctrl+F">Ctrl+F</span></td>
<td>Find</td>
<td><code>actions.find</code></td>
</tr>
<tr>
<td><span title="OSX: ⌥⌘F, Linux: Ctrl+H" class="dynamic-keybinding keybinding win" data-osx="⌥⌘F" data-win="Ctrl+H" data-linux="Ctrl+H">Ctrl+H</span></td>
<td>Replace</td>
<td><code>editor.action.startFindReplaceAction</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘G, Linux: F3" class="dynamic-keybinding keybinding win" data-osx="⌘G" data-win="F3" data-linux="F3">F3</span></td>
<td>Find Next</td>
<td><code>editor.action.nextMatchFindAction</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧⌘G, Linux: Shift+F3" class="dynamic-keybinding keybinding win" data-osx="⇧⌘G" data-win="Shift+F3" data-linux="Shift+F3">Shift+F3</span></td>
<td>Find Previous</td>
<td><code>editor.action.previousMatchFindAction</code></td>
</tr>
<tr>
<td><span title="OSX: ⌥Enter, Linux: Alt+Enter" class="dynamic-keybinding keybinding win" data-osx="⌥Enter" data-win="Alt+Enter" data-linux="Alt+Enter">Alt+Enter</span></td>
<td>Select All Occurences of Find Match</td>
<td><code>editor.action.selectAllMatches</code></td>
</tr>
<tr>
<td><span title="OSX: ⌥⌘C, Linux: Alt+C" class="dynamic-keybinding keybinding win" data-osx="⌥⌘C" data-win="Alt+C" data-linux="Alt+C">Alt+C</span></td>
<td>Toggle Find Case Sensitive</td>
<td><code>toggleFindCaseSensitive</code></td>
</tr>
<tr>
<td><span title="OSX: ⌥⌘R, Linux: Alt+R" class="dynamic-keybinding keybinding win" data-osx="⌥⌘R" data-win="Alt+R" data-linux="Alt+R">Alt+R</span></td>
<td>Toggle Find Regex</td>
<td><code>toggleFindRegex</code></td>
</tr>
<tr>
<td><span title="OSX: ⌥⌘W, Linux: Alt+W" class="dynamic-keybinding keybinding win" data-osx="⌥⌘W" data-win="Alt+W" data-linux="Alt+W">Alt+W</span></td>
<td>Toggle Find Whole Word</td>
<td><code>toggleFindWholeWord</code></td>
</tr>
<tr>
<td><span title="OSX: ⌃⇧M, Linux: Ctrl+M" class="dynamic-keybinding keybinding win" data-osx="⌃⇧M" data-win="Ctrl+M" data-linux="Ctrl+M">Ctrl+M</span></td>
<td>Toggle Use of Tab Key for Setting Focus</td>
<td><code>editor.action.toggleTabFocusMode</code></td>
</tr>
<tr>
<td><span title="" class="dynamic-keybinding keybinding win">unassigned</span></td>
<td>Toggle Render Whitespace</td>
<td><code>toggleRenderWhitespace</code></td>
</tr>
</tbody>
</table>
<h2 id="_rich-languages-editing" data-needslink="_rich-languages-editing">Rich Languages Editing<a class="hash-link hidden" href="#_rich-languages-editing">#</a></h2>
<table class="table table-striped">
<thead>
<tr>
<th>Key</th>
<th>Command</th>
<th>Command id</th>
</tr>
</thead>
<tbody>
<tr>
<td><span title="OSX: ⌃Space, Linux: Ctrl+Space" class="dynamic-keybinding keybinding win" data-osx="⌃Space" data-win="Ctrl+Space" data-linux="Ctrl+Space">Ctrl+Space</span></td>
<td>Trigger Suggest</td>
<td><code>editor.action.triggerSuggest</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧⌘Space, Linux: Ctrl+Shift+Space" class="dynamic-keybinding keybinding win" data-osx="⇧⌘Space" data-win="Ctrl+Shift+Space" data-linux="Ctrl+Shift+Space">Ctrl+Shift+Space</span></td>
<td>Trigger Parameter Hints</td>
<td><code>editor.action.triggerParameterHints</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧⌥F, Linux: Ctrl+Shift+I" class="dynamic-keybinding keybinding win" data-osx="⇧⌥F" data-win="Shift+Alt+F" data-linux="Ctrl+Shift+I">Shift+Alt+F</span></td>
<td>Format Code</td>
<td><code>editor.action.format</code></td>
</tr>
<tr>
<td><span title="OSX: F12, Linux: F12" class="dynamic-keybinding keybinding win" data-osx="F12" data-win="F12" data-linux="F12">F12</span></td>
<td>Go to Definition</td>
<td><code>editor.action.goToDeclaration</code></td>
</tr>
<tr>
<td><span title="OSX: ⌥F12, Linux: Ctrl+Shift+F10" class="dynamic-keybinding keybinding win" data-osx="⌥F12" data-win="Alt+F12" data-linux="Ctrl+Shift+F10">Alt+F12</span></td>
<td>Peek Definition</td>
<td><code>editor.action.previewDeclaration</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘K F12, Linux: Ctrl+K F12" class="dynamic-keybinding keybinding win" data-osx="⌘K F12" data-win="Ctrl+K F12" data-linux="Ctrl+K F12">Ctrl+K F12</span></td>
<td>Open Definition to the Side</td>
<td><code>editor.action.openDeclarationToTheSide</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘., Linux: Ctrl+." class="dynamic-keybinding keybinding win" data-osx="⌘." data-win="Ctrl+." data-linux="Ctrl+.">Ctrl+.</span></td>
<td>Quick Fix</td>
<td><code>editor.action.quickFix</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧F12, Linux: Shift+F12" class="dynamic-keybinding keybinding win" data-osx="⇧F12" data-win="Shift+F12" data-linux="Shift+F12">Shift+F12</span></td>
<td>Show References</td>
<td><code>editor.action.referenceSearch.trigger</code></td>
</tr>
<tr>
<td><span title="OSX: F2, Linux: F2" class="dynamic-keybinding keybinding win" data-osx="F2" data-win="F2" data-linux="F2">F2</span></td>
<td>Rename Symbol</td>
<td><code>editor.action.rename</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧⌘., Linux: Ctrl+Shift+." class="dynamic-keybinding keybinding win" data-osx="⇧⌘." data-win="Ctrl+Shift+." data-linux="Ctrl+Shift+.">Ctrl+Shift+.</span></td>
<td>Replace with Next Value</td>
<td><code>editor.action.inPlaceReplace.down</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧⌘,, Linux: Ctrl+Shift+," class="dynamic-keybinding keybinding win" data-osx="⇧⌘," data-win="Ctrl+Shift+," data-linux="Ctrl+Shift+,">Ctrl+Shift+,</span></td>
<td>Replace with Previous Value</td>
<td><code>editor.action.inPlaceReplace.up</code></td>
</tr>
<tr>
<td><span title="OSX: ⌃⇧⌘→, Linux: Shift+Alt+Right" class="dynamic-keybinding keybinding win" data-osx="⌃⇧⌘→" data-win="Shift+Alt+Right" data-linux="Shift+Alt+Right">Shift+Alt+Right</span></td>
<td>Expand AST Select</td>
<td><code>editor.action.smartSelect.grow</code></td>
</tr>
<tr>
<td><span title="OSX: ⌃⇧⌘←, Linux: Shift+Alt+Left" class="dynamic-keybinding keybinding win" data-osx="⌃⇧⌘←" data-win="Shift+Alt+Left" data-linux="Shift+Alt+Left">Shift+Alt+Left</span></td>
<td>Shrink AST Select</td>
<td><code>editor.action.smartSelect.shrink</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘K ⌘X, Linux: Ctrl+K Ctrl+X" class="dynamic-keybinding keybinding win" data-osx="⌘K ⌘X" data-win="Ctrl+K Ctrl+X" data-linux="Ctrl+K Ctrl+X">Ctrl+K Ctrl+X</span></td>
<td>Trim Trailing Whitespace</td>
<td><code>editor.action.trimTrailingWhitespace</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘K M, Linux: Ctrl+K M" class="dynamic-keybinding keybinding win" data-osx="⌘K M" data-win="Ctrl+K M" data-linux="Ctrl+K M">Ctrl+K M</span></td>
<td>Change Language Mode</td>
<td><code>workbench.action.editor.changeLanguageMode</code></td>
</tr>
</tbody>
</table>
<h2 id="_navigation" data-needslink="_navigation">Navigation<a class="hash-link hidden" href="#_navigation">#</a></h2>
<table class="table table-striped">
<thead>
<tr>
<th>Key</th>
<th>Command</th>
<th>Command id</th>
</tr>
</thead>
<tbody>
<tr>
<td><span title="OSX: ⌘T, Linux: Ctrl+T" class="dynamic-keybinding keybinding win" data-osx="⌘T" data-win="Ctrl+T" data-linux="Ctrl+T">Ctrl+T</span></td>
<td>Show All Symbols</td>
<td><code>workbench.action.showAllSymbols</code></td>
</tr>
<tr>
<td><span title="OSX: ⌃G, Linux: Ctrl+G" class="dynamic-keybinding keybinding win" data-osx="⌃G" data-win="Ctrl+G" data-linux="Ctrl+G">Ctrl+G</span></td>
<td>Go to Line...</td>
<td><code>workbench.action.gotoLine</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘P, Linux: Ctrl+P" class="dynamic-keybinding keybinding win" data-osx="⌘P" data-win="Ctrl+P" data-linux="Ctrl+P">Ctrl+P</span></td>
<td>Go to File..., Quick Open</td>
<td><code>workbench.action.quickOpen</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧⌘O, Linux: Ctrl+Shift+O" class="dynamic-keybinding keybinding win" data-osx="⇧⌘O" data-win="Ctrl+Shift+O" data-linux="Ctrl+Shift+O">Ctrl+Shift+O</span></td>
<td>Go to Symbol...</td>
<td><code>workbench.action.gotoSymbol</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧⌘M, Linux: Ctrl+Shift+M" class="dynamic-keybinding keybinding win" data-osx="⇧⌘M" data-win="Ctrl+Shift+M" data-linux="Ctrl+Shift+M">Ctrl+Shift+M</span></td>
<td>Show Problems</td>
<td><code>workbench.actions.view.problems</code></td>
</tr>
<tr>
<td><span title="OSX: F8, Linux: F8" class="dynamic-keybinding keybinding win" data-osx="F8" data-win="F8" data-linux="F8">F8</span></td>
<td>Go to Next Error or Warning</td>
<td><code>editor.action.marker.next</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧F8, Linux: Shift+F8" class="dynamic-keybinding keybinding win" data-osx="⇧F8" data-win="Shift+F8" data-linux="Shift+F8">Shift+F8</span></td>
<td>Go to Previous Error or Warning</td>
<td><code>editor.action.marker.prev</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧⌘P, Linux: Ctrl+Shift+P" class="dynamic-keybinding keybinding win" data-osx="⇧⌘P" data-win="Ctrl+Shift+P" data-linux="Ctrl+Shift+P">Ctrl+Shift+P</span></td>
<td>Show All Commands</td>
<td><code>workbench.action.showCommands</code></td>
</tr>
<tr>
<td><span title="OSX: ⌃⇧Tab, Linux: Ctrl+Shift+Tab" class="dynamic-keybinding keybinding win" data-osx="⌃⇧Tab" data-win="Ctrl+Shift+Tab" data-linux="Ctrl+Shift+Tab">Ctrl+Shift+Tab</span></td>
<td>Navigate Editor Group History</td>
<td><code>workbench.action.openPreviousRecentlyUsedEditorInGroup</code></td>
</tr>
<tr>
<td><span title="OSX: ⌃-, Linux: Ctrl+Alt+-" class="dynamic-keybinding keybinding win" data-osx="⌃-" data-win="Alt+Left" data-linux="Ctrl+Alt+-">Alt+Left</span></td>
<td>Go Back</td>
<td><code>workbench.action.navigateBack</code></td>
</tr>
<tr>
<td><span title="OSX: ⌃⇧-, Linux: Ctrl+Shift+-" class="dynamic-keybinding keybinding win" data-osx="⌃⇧-" data-win="Alt+Right" data-linux="Ctrl+Shift+-">Alt+Right</span></td>
<td>Go Forward</td>
<td><code>workbench.action.navigateForward</code></td>
</tr>
</tbody>
</table>
<h2 id="_editorwindow-management" data-needslink="_editorwindow-management">Editor/Window Management<a class="hash-link hidden" href="#_editorwindow-management">#</a></h2>
<table class="table table-striped">
<thead>
<tr>
<th>Key</th>
<th>Command</th>
<th>Command id</th>
</tr>
</thead>
<tbody>
<tr>
<td><span title="OSX: ⇧⌘N, Linux: Ctrl+Shift+N" class="dynamic-keybinding keybinding win" data-osx="⇧⌘N" data-win="Ctrl+Shift+N" data-linux="Ctrl+Shift+N">Ctrl+Shift+N</span></td>
<td>New Window</td>
<td><code>workbench.action.newWindow</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘W, Linux: Ctrl+Shift+W" class="dynamic-keybinding keybinding win" data-osx="⌘W" data-win="Ctrl+W" data-linux="Ctrl+Shift+W">Ctrl+W</span></td>
<td>Close Window</td>
<td><code>workbench.action.closeWindow</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘W, Linux: Ctrl+W" class="dynamic-keybinding keybinding win" data-osx="⌘W" data-win="Ctrl+F4" data-linux="Ctrl+W">Ctrl+F4</span></td>
<td>Close Editor</td>
<td><code>workbench.action.closeActiveEditor</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘K F, Linux: Ctrl+K F" class="dynamic-keybinding keybinding win" data-osx="⌘K F" data-win="Ctrl+K F" data-linux="Ctrl+K F">Ctrl+K F</span></td>
<td>Close Folder</td>
<td><code>workbench.action.closeFolder</code></td>
</tr>
<tr>
<td><span title="" class="dynamic-keybinding keybinding win">unassigned</span></td>
<td>Cycle Between Editor Groups</td>
<td><code>workbench.action.navigateEditorGroups</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘\, Linux: Ctrl+\" class="dynamic-keybinding keybinding win" data-osx="⌘\" data-win="Ctrl+\" data-linux="Ctrl+\">Ctrl+\</span></td>
<td>Split Editor</td>
<td><code>workbench.action.splitEditor</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘1, Linux: Ctrl+1" class="dynamic-keybinding keybinding win" data-osx="⌘1" data-win="Ctrl+1" data-linux="Ctrl+1">Ctrl+1</span></td>
<td>Focus into Left Editor Group</td>
<td><code>workbench.action.focusFirstEditorGroup</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘2, Linux: Ctrl+2" class="dynamic-keybinding keybinding win" data-osx="⌘2" data-win="Ctrl+2" data-linux="Ctrl+2">Ctrl+2</span></td>
<td>Focus into Side Editor Group</td>
<td><code>workbench.action.focusSecondEditorGroup</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘3, Linux: Ctrl+3" class="dynamic-keybinding keybinding win" data-osx="⌘3" data-win="Ctrl+3" data-linux="Ctrl+3">Ctrl+3</span></td>
<td>Focus into Right Editor Group</td>
<td><code>workbench.action.focusThirdEditorGroup</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘K ⌘←, Linux: Ctrl+K Ctrl+Left" class="dynamic-keybinding keybinding win" data-osx="⌘K ⌘←" data-win="Ctrl+K Ctrl+Left" data-linux="Ctrl+K Ctrl+Left">Ctrl+K Ctrl+Left</span></td>
<td>Focus into Editor Group on the Left</td>
<td><code>workbench.action.focusPreviousGroup</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘K ⌘→, Linux: Ctrl+K Ctrl+Right" class="dynamic-keybinding keybinding win" data-osx="⌘K ⌘→" data-win="Ctrl+K Ctrl+Right" data-linux="Ctrl+K Ctrl+Right">Ctrl+K Ctrl+Right</span></td>
<td>Focus into Editor Group on the Right</td>
<td><code>workbench.action.focusNextGroup</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘K ←, Linux: Ctrl+K Left" class="dynamic-keybinding keybinding win" data-osx="⌘K ←" data-win="Ctrl+K Left" data-linux="Ctrl+K Left">Ctrl+K Left</span></td>
<td>Move Active Editor Group Left</td>
<td><code>workbench.action.moveActiveEditorGroupLeft</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘K →, Linux: Ctrl+K Right" class="dynamic-keybinding keybinding win" data-osx="⌘K →" data-win="Ctrl+K Right" data-linux="Ctrl+K Right">Ctrl+K Right</span></td>
<td>Move Active Editor Group Right</td>
<td><code>workbench.action.moveActiveEditorGroupRight</code></td>
</tr>
</tbody>
</table>
<h2 id="_file-management" data-needslink="_file-management">File Management<a class="hash-link hidden" href="#_file-management">#</a></h2>
<table class="table table-striped">
<thead>
<tr>
<th>Key</th>
<th>Command</th>
<th>Command id</th>
</tr>
</thead>
<tbody>
<tr>
<td><span title="OSX: ⌘N, Linux: Ctrl+N" class="dynamic-keybinding keybinding win" data-osx="⌘N" data-win="Ctrl+N" data-linux="Ctrl+N">Ctrl+N</span></td>
<td>New File</td>
<td><code>workbench.action.files.newUntitledFile</code></td>
</tr>
<tr>
<td><span title="Linux: Ctrl+O" class="dynamic-keybinding keybinding win" data-win="Ctrl+O" data-linux="Ctrl+O">Ctrl+O</span></td>
<td>Open File...</td>
<td><code>workbench.action.files.openFile</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘S, Linux: Ctrl+S" class="dynamic-keybinding keybinding win" data-osx="⌘S" data-win="Ctrl+S" data-linux="Ctrl+S">Ctrl+S</span></td>
<td>Save</td>
<td><code>workbench.action.files.save</code></td>
</tr>
<tr>
<td><span title="" class="dynamic-keybinding keybinding win">unassigned</span></td>
<td>Save All</td>
<td><code>workbench.action.files.saveAll</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧⌘S, Linux: Ctrl+Shift+S" class="dynamic-keybinding keybinding win" data-osx="⇧⌘S" data-win="Ctrl+Shift+S" data-linux="Ctrl+Shift+S">Ctrl+Shift+S</span></td>
<td>Save As...</td>
<td><code>workbench.action.files.saveAs</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘W, Linux: Ctrl+W" class="dynamic-keybinding keybinding win" data-osx="⌘W" data-win="Ctrl+F4" data-linux="Ctrl+W">Ctrl+F4</span></td>
<td>Close</td>
<td><code>workbench.action.closeActiveEditor</code></td>
</tr>
<tr>
<td><span title="OSX: ⌥⌘T" class="dynamic-keybinding keybinding win" data-osx="⌥⌘T">unassigned</span></td>
<td>Close Others</td>
<td><code>workbench.action.closeOtherEditors</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘K W, Linux: Ctrl+K W" class="dynamic-keybinding keybinding win" data-osx="⌘K W" data-win="Ctrl+K W" data-linux="Ctrl+K W">Ctrl+K W</span></td>
<td>Close Group</td>
<td><code>workbench.action.closeEditorsInGroup</code></td>
</tr>
<tr>
<td><span title="" class="dynamic-keybinding keybinding win">unassigned</span></td>
<td>Close Other Groups</td>
<td><code>workbench.action.closeEditorsInOtherGroups</code></td>
</tr>
<tr>
<td><span title="" class="dynamic-keybinding keybinding win">unassigned</span></td>
<td>Close Group to Left</td>
<td><code>workbench.action.closeEditorsToTheLeft</code></td>
</tr>
<tr>
<td><span title="" class="dynamic-keybinding keybinding win">unassigned</span></td>
<td>Close Group to Right</td>
<td><code>workbench.action.closeEditorsToTheRight</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘K ⌘W, Linux: Ctrl+K Ctrl+W" class="dynamic-keybinding keybinding win" data-osx="⌘K ⌘W" data-win="Ctrl+K Ctrl+W" data-linux="Ctrl+K Ctrl+W">Ctrl+K Ctrl+W</span></td>
<td>Close All</td>
<td><code>workbench.action.closeAllEditors</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘K Enter, Linux: Ctrl+K Enter" class="dynamic-keybinding keybinding win" data-osx="⌘K Enter" data-win="Ctrl+K Enter" data-linux="Ctrl+K Enter">Ctrl+K Enter</span></td>
<td>Keep Open</td>
<td><code>workbench.action.keepEditor</code></td>
</tr>
<tr>
<td><span title="OSX: ⌃Tab, Linux: Ctrl+Tab" class="dynamic-keybinding keybinding win" data-osx="⌃Tab" data-win="Ctrl+Tab" data-linux="Ctrl+Tab">Ctrl+Tab</span></td>
<td>Open Next</td>
<td><code>workbench.action.openNextRecentlyUsedEditorInGroup</code></td>
</tr>
<tr>
<td><span title="OSX: ⌃⇧Tab, Linux: Ctrl+Shift+Tab" class="dynamic-keybinding keybinding win" data-osx="⌃⇧Tab" data-win="Ctrl+Shift+Tab" data-linux="Ctrl+Shift+Tab">Ctrl+Shift+Tab</span></td>
<td>Open Previous</td>
<td><code>workbench.action.openPreviousRecentlyUsedEditorInGroup</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘K P, Linux: Ctrl+K P" class="dynamic-keybinding keybinding win" data-osx="⌘K P" data-win="Ctrl+K P" data-linux="Ctrl+K P">Ctrl+K P</span></td>
<td>Copy Path of Active File</td>
<td><code>workbench.action.files.copyPathOfActiveFile</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘K R, Linux: Ctrl+K R" class="dynamic-keybinding keybinding win" data-osx="⌘K R" data-win="Ctrl+K R" data-linux="Ctrl+K R">Ctrl+K R</span></td>
<td>Reveal Active File in Windows</td>
<td><code>workbench.action.files.revealActiveFileInWindows</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘K O, Linux: Ctrl+K O" class="dynamic-keybinding keybinding win" data-osx="⌘K O" data-win="Ctrl+K O" data-linux="Ctrl+K O">Ctrl+K O</span></td>
<td>Show Opened File in New Window</td>
<td><code>workbench.action.files.showOpenedFileInNewWindow</code></td>
</tr>
<tr>
<td><span title="" class="dynamic-keybinding keybinding win">unassigned</span></td>
<td>Compare Opened File With</td>
<td><code>workbench.files.action.compareFileWith</code></td>
</tr>
</tbody>
</table>
<h2 id="_display" data-needslink="_display">Display<a class="hash-link hidden" href="#_display">#</a></h2>
<table class="table table-striped">
<thead>
<tr>
<th>Key</th>
<th>Command</th>
<th>Command id</th>
</tr>
</thead>
<tbody>
<tr>
<td><span title="OSX: ⌃⌘F, Linux: F11" class="dynamic-keybinding keybinding win" data-osx="⌃⌘F" data-win="F11" data-linux="F11">F11</span></td>
<td>Toggle Full Screen</td>
<td><code>workbench.action.toggleFullScreen</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘=, Linux: Ctrl+=" class="dynamic-keybinding keybinding win" data-osx="⌘=" data-win="Ctrl+=" data-linux="Ctrl+=">Ctrl+=</span></td>
<td>Zoom in</td>
<td><code>workbench.action.zoomIn</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘-, Linux: Ctrl+-" class="dynamic-keybinding keybinding win" data-osx="⌘-" data-win="Ctrl+-" data-linux="Ctrl+-">Ctrl+-</span></td>
<td>Zoom out</td>
<td><code>workbench.action.zoomOut</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘B, Linux: Ctrl+B" class="dynamic-keybinding keybinding win" data-osx="⌘B" data-win="Ctrl+B" data-linux="Ctrl+B">Ctrl+B</span></td>
<td>Toggle Sidebar Visibility</td>
<td><code>workbench.action.toggleSidebarVisibility</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧⌘D, Linux: Ctrl+Shift+D" class="dynamic-keybinding keybinding win" data-osx="⇧⌘D" data-win="Ctrl+Shift+D" data-linux="Ctrl+Shift+D">Ctrl+Shift+D</span></td>
<td>Show Debug</td>
<td><code>workbench.view.debug</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧⌘E, Linux: Ctrl+Shift+E" class="dynamic-keybinding keybinding win" data-osx="⇧⌘E" data-win="Ctrl+Shift+E" data-linux="Ctrl+Shift+E">Ctrl+Shift+E</span></td>
<td>Show Explorer / Toggle Focus</td>
<td><code>workbench.view.explorer</code></td>
</tr>
<tr>
<td><span title="OSX: ⌃⇧G, Linux: Ctrl+Shift+G" class="dynamic-keybinding keybinding win" data-osx="⌃⇧G" data-win="Ctrl+Shift+G" data-linux="Ctrl+Shift+G">Ctrl+Shift+G</span></td>
<td>Show Git</td>
<td><code>workbench.view.git</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧⌘F, Linux: Ctrl+Shift+F" class="dynamic-keybinding keybinding win" data-osx="⇧⌘F" data-win="Ctrl+Shift+F" data-linux="Ctrl+Shift+F">Ctrl+Shift+F</span></td>
<td>Show Search</td>
<td><code>workbench.view.search</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧⌘H, Linux: Ctrl+Shift+H" class="dynamic-keybinding keybinding win" data-osx="⇧⌘H" data-win="Ctrl+Shift+H" data-linux="Ctrl+Shift+H">Ctrl+Shift+H</span></td>
<td>Replace in Files</td>
<td><code>workbench.action.replaceInFiles</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧⌘X, Linux: Ctrl+Shift+X" class="dynamic-keybinding keybinding win" data-osx="⇧⌘X" data-win="Ctrl+Shift+X" data-linux="Ctrl+Shift+X">Ctrl+Shift+X</span></td>
<td>Show Extensions</td>
<td><code>workbench.view.extensions</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧⌘J, Linux: Ctrl+Shift+J" class="dynamic-keybinding keybinding win" data-osx="⇧⌘J" data-win="Ctrl+Shift+J" data-linux="Ctrl+Shift+J">Ctrl+Shift+J</span></td>
<td>Toggle Search Details</td>
<td><code>workbench.action.search.toggleQueryDetails</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧⌘C, Linux: Ctrl+Shift+C" class="dynamic-keybinding keybinding win" data-osx="⇧⌘C" data-win="Ctrl+Shift+C" data-linux="Ctrl+Shift+C">Ctrl+Shift+C</span></td>
<td>Open New Command Prompt</td>
<td><code>workbench.action.terminal.openNativeConsole</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧⌘U, Linux: Ctrl+K Ctrl+H" class="dynamic-keybinding keybinding win" data-osx="⇧⌘U" data-win="Ctrl+Shift+U" data-linux="Ctrl+K Ctrl+H">Ctrl+Shift+U</span></td>
<td>Show Output</td>
<td><code>workbench.action.output.toggleOutput</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧⌘V, Linux: Ctrl+Shift+V" class="dynamic-keybinding keybinding win" data-osx="⇧⌘V" data-win="Ctrl+Shift+V" data-linux="Ctrl+Shift+V">Ctrl+Shift+V</span></td>
<td>Toggle Markdown Preview</td>
<td><code>markdown.showPreview</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘K V, Linux: Ctrl+K V" class="dynamic-keybinding keybinding win" data-osx="⌘K V" data-win="Ctrl+K V" data-linux="Ctrl+K V">Ctrl+K V</span></td>
<td>Open Preview to the Side</td>
<td><code>markdown.showPreviewToSide</code></td>
</tr>
<tr>
<td><span title="OSX: ⌃`, Linux: Ctrl+`" class="dynamic-keybinding keybinding win" data-osx="⌃`" data-win="Ctrl+`" data-linux="Ctrl+`">Ctrl+`</span></td>
<td>Toggle Integrated Terminal</td>
<td><code>workbench.action.terminal.toggleTerminal</code></td>
</tr>
</tbody>
</table>
<h2 id="_preferences" data-needslink="_preferences">Preferences<a class="hash-link hidden" href="#_preferences">#</a></h2>
<table class="table table-striped">
<thead>
<tr>
<th>Key</th>
<th>Command</th>
<th>Command id</th>
</tr>
</thead>
<tbody>
<tr>
<td><span title="OSX: ⌘," class="dynamic-keybinding keybinding win" data-osx="⌘,">unassigned</span></td>
<td>Open User Settings</td>
<td><code>workbench.action.openGlobalSettings</code></td>
</tr>
<tr>
<td><span title="" class="dynamic-keybinding keybinding win">unassigned</span></td>
<td>Open Workspace Settings</td>
<td><code>workbench.action.openWorkspaceSettings</code></td>
</tr>
<tr>
<td><span title="" class="dynamic-keybinding keybinding win">unassigned</span></td>
<td>Open Keyboard Shortcuts</td>
<td><code>workbench.action.openGlobalKeybindings</code></td>
</tr>
<tr>
<td><span title="" class="dynamic-keybinding keybinding win">unassigned</span></td>
<td>Open User Snippets</td>
<td><code>workbench.action.openSnippets</code></td>
</tr>
<tr>
<td><span title="" class="dynamic-keybinding keybinding win">unassigned</span></td>
<td>Select Color Theme</td>
<td><code>workbench.action.selectTheme</code></td>
</tr>
<tr>
<td><span title="" class="dynamic-keybinding keybinding win">unassigned</span></td>
<td>Configure Display Language</td>
<td><code>workbench.action.configureLocale</code></td>
</tr>
</tbody>
</table>
<h2 id="_debug" data-needslink="_debug">Debug<a class="hash-link hidden" href="#_debug">#</a></h2>
<table class="table table-striped">
<thead>
<tr>
<th>Key</th>
<th>Command</th>
<th>Command id</th>
</tr>
</thead>
<tbody>
<tr>
<td><span title="OSX: F9, Linux: F9" class="dynamic-keybinding keybinding win" data-osx="F9" data-win="F9" data-linux="F9">F9</span></td>
<td>Toggle Breakpoint</td>
<td><code>editor.debug.action.toggleBreakpoint</code></td>
</tr>
<tr>
<td><span title="OSX: F5, Linux: F5" class="dynamic-keybinding keybinding win" data-osx="F5" data-win="F5" data-linux="F5">F5</span></td>
<td>Continue</td>
<td><code>workbench.action.debug.continue</code></td>
</tr>
<tr>
<td><span title="OSX: F5, Linux: F5" class="dynamic-keybinding keybinding win" data-osx="F5" data-win="F5" data-linux="F5">F5</span></td>
<td>Pause</td>
<td><code>workbench.action.debug.start</code></td>
</tr>
<tr>
<td><span title="OSX: F11, Linux: F11" class="dynamic-keybinding keybinding win" data-osx="F11" data-win="F11" data-linux="F11">F11</span></td>
<td>Step Into</td>
<td><code>workbench.action.debug.stepInto</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧F11, Linux: Shift+F11" class="dynamic-keybinding keybinding win" data-osx="⇧F11" data-win="Shift+F11" data-linux="Shift+F11">Shift+F11</span></td>
<td>Step Out</td>
<td><code>workbench.action.debug.stepOut</code></td>
</tr>
<tr>
<td><span title="OSX: F10, Linux: F10" class="dynamic-keybinding keybinding win" data-osx="F10" data-win="F10" data-linux="F10">F10</span></td>
<td>Step Over</td>
<td><code>workbench.action.debug.stepOver</code></td>
</tr>
<tr>
<td><span title="OSX: ⇧F5, Linux: Shift+F5" class="dynamic-keybinding keybinding win" data-osx="⇧F5" data-win="Shift+F5" data-linux="Shift+F5">Shift+F5</span></td>
<td>Stop</td>
<td><code>workbench.action.debug.stop</code></td>
</tr>
<tr>
<td><span title="OSX: ⌘K ⌘I, Linux: Ctrl+K Ctrl+I" class="dynamic-keybinding keybinding win" data-osx="⌘K ⌘I" data-win="Ctrl+K Ctrl+I" data-linux="Ctrl+K Ctrl+I">Ctrl+K Ctrl+I</span></td>
<td>Show Hover</td>
<td><code>editor.action.showHover</code></td>
</tr>
</tbody>
</table>
<h2 id="_tasks" data-needslink="_tasks">Tasks<a class="hash-link hidden" href="#_tasks">#</a></h2>
<table class="table table-striped">
<thead>
<tr>
<th>Key</th>
<th>Command</th>
<th>Command id</th>
</tr>
</thead>
<tbody>
<tr>
<td><span title="OSX: ⇧⌘B, Linux: Ctrl+Shift+B" class="dynamic-keybinding keybinding win" data-osx="⇧⌘B" data-win="Ctrl+Shift+B" data-linux="Ctrl+Shift+B">Ctrl+Shift+B</span></td>
<td>Run Build Task</td>
<td><code>workbench.action.tasks.build</code></td>
</tr>
<tr>
<td><span title="" class="dynamic-keybinding keybinding win">unassigned</span></td>
<td>Run Test Task</td>
<td><code>workbench.action.tasks.test</code></td>
</tr>
</tbody>
</table>
<h2 id="_extensions" data-needslink="_extensions">Extensions<a class="hash-link hidden" href="#_extensions">#</a></h2>
<table class="table table-striped">
<thead>
<tr>
<th>Key</th>
<th>Command</th>
<th>Command id</th>
</tr>
</thead>
<tbody>
<tr>
<td><span title="" class="dynamic-keybinding keybinding win">unassigned</span></td>
<td>Install Extension</td>
<td><code>workbench.extensions.action.installExtension</code></td>
</tr>
<tr>
<td><span title="" class="dynamic-keybinding keybinding win">unassigned</span></td>
<td>Show Installed Extensions</td>
<td><code>workbench.extensions.action.showInstalledExtensions</code></td>
</tr>
<tr>
<td><span title="" class="dynamic-keybinding keybinding win">unassigned</span></td>
<td>Show Outdated Extensions</td>
<td><code>workbench.extensions.action.listOutdatedExtensions</code></td>
</tr>
<tr>
<td><span title="" class="dynamic-keybinding keybinding win">unassigned</span></td>
<td>Show Recommended Extensions</td>
<td><code>workbench.extensions.action.showRecommendedExtensions</code></td>
</tr>
<tr>
<td><span title="" class="dynamic-keybinding keybinding win">unassigned</span></td>
<td>Show Popular Extensions</td>
<td><code>workbench.extensions.action.showPopularExtensions</code></td>
</tr>
</tbody>
</table>
<h2 id="_customizing-shortcuts" data-needslink="_customizing-shortcuts">Customizing Shortcuts<a class="hash-link hidden" href="#_customizing-shortcuts">#</a></h2>
<p>All keyboard shortcuts in VS Code can be customized via the <code>User/keybindings.json</code> file.</p>
<ul>
<li>To configure keyboard shortcuts the way you want, go to the menu under <strong>File</strong>  &gt; <strong>Preferences</strong> &gt; <strong>Keyboard Shortcuts</strong>. (<strong>Code</strong> &gt; <strong>Preferences</strong> &gt; <strong>Keyboard Shortcuts</strong> on Mac)</li>
<li>This will open the <code>Default Keyboard Shortcuts</code> on the left and your <code>User/keybindings.json</code> file where you can overwrite the default bindings on the right.</li>
</ul>
<h2 id="_keyboard-rules" data-needslink="_keyboard-rules">Keyboard Rules<a class="hash-link hidden" href="#_keyboard-rules">#</a></h2>
<p>The keyboard shortcuts dispatching is done by analyzing a list of rules that are expressed in JSON. Here are some examples:</p>
<pre><code class="json">// Keybindings that are active when the focus is in the editor
{ "<span class="hljs-attribute">key</span>": <span class="hljs-value"><span class="hljs-string">"home"</span></span>,            "<span class="hljs-attribute">command</span>": <span class="hljs-value"><span class="hljs-string">"cursorHome"</span></span>,                  "<span class="hljs-attribute">when</span>": <span class="hljs-value"><span class="hljs-string">"editorTextFocus"</span> </span>},
{ "<span class="hljs-attribute">key</span>": <span class="hljs-value"><span class="hljs-string">"shift+home"</span></span>,      "<span class="hljs-attribute">command</span>": <span class="hljs-value"><span class="hljs-string">"cursorHomeSelect"</span></span>,            "<span class="hljs-attribute">when</span>": <span class="hljs-value"><span class="hljs-string">"editorTextFocus"</span> </span>},

// Keybindings that are complementary
{ "<span class="hljs-attribute">key</span>": <span class="hljs-value"><span class="hljs-string">"f5"</span></span>,              "<span class="hljs-attribute">command</span>": <span class="hljs-value"><span class="hljs-string">"workbench.action.debug.continue"</span></span>, "<span class="hljs-attribute">when</span>": <span class="hljs-value"><span class="hljs-string">"inDebugMode"</span> </span>},
{ "<span class="hljs-attribute">key</span>": <span class="hljs-value"><span class="hljs-string">"f5"</span></span>,              "<span class="hljs-attribute">command</span>": <span class="hljs-value"><span class="hljs-string">"workbench.action.debug.start"</span></span>,    "<span class="hljs-attribute">when</span>": <span class="hljs-value"><span class="hljs-string">"!inDebugMode"</span> </span>},

// Global keybindings
{ "<span class="hljs-attribute">key</span>": <span class="hljs-value"><span class="hljs-string">"ctrl+f"</span></span>,          "<span class="hljs-attribute">command</span>": <span class="hljs-value"><span class="hljs-string">"actions.find"</span> </span>},
{ "<span class="hljs-attribute">key</span>": <span class="hljs-value"><span class="hljs-string">"alt+left"</span></span>,        "<span class="hljs-attribute">command</span>": <span class="hljs-value"><span class="hljs-string">"workbench.action.navigateBack"</span> </span>},
{ "<span class="hljs-attribute">key</span>": <span class="hljs-value"><span class="hljs-string">"alt+right"</span></span>,       "<span class="hljs-attribute">command</span>": <span class="hljs-value"><span class="hljs-string">"workbench.action.navigateForward"</span> </span>},

// Global keybindings using chords (two separate keypress actions)
{ "<span class="hljs-attribute">key</span>": <span class="hljs-value"><span class="hljs-string">"ctrl+k enter"</span></span>,    "<span class="hljs-attribute">command</span>": <span class="hljs-value"><span class="hljs-string">"workbench.action.keepEditor"</span> </span>},
{ "<span class="hljs-attribute">key</span>": <span class="hljs-value"><span class="hljs-string">"ctrl+k ctrl+w"</span></span>,   "<span class="hljs-attribute">command</span>": <span class="hljs-value"><span class="hljs-string">"workbench.action.closeAllEditors"</span> </span>},
</code></pre>
<p>Each rule consists of:</p>
<ul>
<li>a <code>key</code> that describes the pressed keys.</li>
<li>a <code>command</code> containing the identifier of the command to execute.</li>
<li>an <strong>optional</strong> <code>when</code> clause containing a boolean expression that will be evaluated depending on the current <strong>context</strong>.</li>
</ul>
<p>Chords (two separate keypress actions) are described by separating the two keypresses with a space. E.g.: <span class="keybinding">ctrl+k ctrl+c</span>.</p>
<p>When a key is pressed:</p>
<ul>
<li>the rules are evaluated from <strong>bottom</strong> to <strong>top</strong>.</li>
<li>the first rule that matches, both the <code>key</code> and in terms of <code>when</code>, is accepted.</li>
<li>no more rules are processed.</li>
<li>if a rule is found and has a <code>command</code> set, the <code>command</code> is executed.</li>
</ul>
<p>The additional <code>User/keybindings.json</code> rules are appended at runtime to the bottom of the default rules, thus allowing them to overwrite the default rules. The <code>User/keybindings.json</code> file is watched by VS Code so editing it while VS Code is running will update the rules at runtime.</p>
<h2 id="_accepted-keys" data-needslink="_accepted-keys">Accepted keys<a class="hash-link hidden" href="#_accepted-keys">#</a></h2>
<p>The <code>key</code> is made up of modifiers and the key itself.</p>
<p>The following modifiers are accepted:</p>
<table class="table table-striped">
<thead>
<tr>
<th>OS</th>
<th>Modifiers</th>
</tr>
</thead>
<tbody>
<tr>
<td>OS X</td>
<td><span class="keybinding">ctrl+</span>, <span class="keybinding">shift+</span>, <span class="keybinding">alt+</span>, <span class="keybinding">cmd+</span></td>
</tr>
<tr>
<td>Windows</td>
<td><span class="keybinding">ctrl+</span>, <span class="keybinding">shift+</span>, <span class="keybinding">alt+</span>, <span class="keybinding">win+</span></td>
</tr>
<tr>
<td>Linux</td>
<td><span class="keybinding">ctrl+</span>, <span class="keybinding">shift+</span>, <span class="keybinding">alt+</span>, <span class="keybinding">meta+</span></td>
</tr>
</tbody>
</table>
<p>The following keys are accepted:</p>
<ul>
<li><span class="keybinding">f1-f19</span>, <span class="keybinding">a-z</span>, <span class="keybinding">0-9</span></li>
<li><span class="keybinding">`</span>, <span class="keybinding">-</span>, <span class="keybinding">=</span>, <span class="keybinding">[</span>, <span class="keybinding">]</span>, <span class="keybinding">\</span>, <span class="keybinding">;</span>, <span class="keybinding">'</span>, <span class="keybinding">,</span>, <span class="keybinding">.</span>, <span class="keybinding">/</span></li>
<li><span class="keybinding">left</span>, <span class="keybinding">up</span>, <span class="keybinding">right</span>, <span class="keybinding">down</span>, <span class="keybinding">pageup</span>, <span class="keybinding">pagedown</span>, <span class="keybinding">end</span>, <span class="keybinding">home</span></li>
<li><span class="keybinding">tab</span>, <span class="keybinding">enter</span>, <span class="keybinding">escape</span>, <span class="keybinding">space</span>, <span class="keybinding">backspace</span>, <span class="keybinding">delete</span></li>
<li><span class="keybinding">pausebreak</span>, <span class="keybinding">capslock</span>, <span class="keybinding">insert</span></li>
<li><span class="keybinding">numpad0-numpad9</span>, <span class="keybinding">numpad_multiply</span>, <span class="keybinding">numpad_add</span>, <span class="keybinding">nupad_separator</span></li>
<li><span class="keybinding">numpad_subtract</span>, <span class="keybinding">numpad_decimal</span>, <span class="keybinding">numpad_divide</span></li>
</ul>
<h2 id="_when-clause-contexts" data-needslink="_when-clause-contexts">when Clause Contexts<a class="hash-link hidden" href="#_when-clause-contexts">#</a></h2>
<p>VS Code gives you fine control over when your key bindings are enabled through the optional <code>when</code> clause.  If you key binding doesn't have a <code>when</code> clause, the key binding is globally available at all times.</p>
<p>Below are the some of the possible <code>when</code> clause contexts which evaluate to Boolean true/false:</p>
<table class="table table-striped">
<thead>
<tr>
<th>Context name</th>
<th>True when</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Editor contexts</strong></td>
<td></td>
</tr>
<tr>
<td>editorFocus</td>
<td>An editor has focus, either the text or a widget.</td>
</tr>
<tr>
<td>editorTextFocus</td>
<td>The text in an editor has focus (cursor is blinking).</td>
</tr>
<tr>
<td>editorHasSelection</td>
<td>Text is selected in the editor.</td>
</tr>
<tr>
<td>editorHasMultipleSelections</td>
<td>Multiple regions of text are selected (multiple cursors).</td>
</tr>
<tr>
<td>editorReadOnly</td>
<td>The editor is read only.</td>
</tr>
<tr>
<td>editorLangId</td>
<td>True when the editor's associated language Id matches. Example: <code>"editorLangId == typescript"</code>.</td>
</tr>
<tr>
<td><strong>Mode contexts</strong></td>
<td></td>
</tr>
<tr>
<td>inDebugMode</td>
<td>A debug session is running.</td>
</tr>
<tr>
<td>inSnippetMode</td>
<td>The editor is in snippet mode.</td>
</tr>
<tr>
<td>inQuickOpen</td>
<td>The Quick Open dropdown has focus.</td>
</tr>
<tr>
<td><strong>Editor widget contexts</strong></td>
<td></td>
</tr>
<tr>
<td>findWidgetVisible</td>
<td>Editor Find widget is visible.</td>
</tr>
<tr>
<td>suggestWidgetVisible</td>
<td>Suggestion widget (IntelliSense) is visible.</td>
</tr>
<tr>
<td>suggestWidgetMultipleSuggestions</td>
<td>Multiple suggestions are displayed.</td>
</tr>
<tr>
<td>renameInputVisible</td>
<td>Rename input text box is visible.</td>
</tr>
<tr>
<td>referenceSearchVisible</td>
<td>Find All References peek window is open.</td>
</tr>
<tr>
<td>inReferenceSearchEditor</td>
<td>The Find All References peek window editor has focus.</td>
</tr>
<tr>
<td>config.editor.stablePeek</td>
<td>Keep peek editors open (controlled by <code>editor.stablePeek</code> setting).</td>
</tr>
<tr>
<td>quickFixWidgetVisible</td>
<td>Quick Fix widget is visible.</td>
</tr>
<tr>
<td>parameterHintsVisible</td>
<td>Parameter hints are visible (controlled by <code>editor.parameterHints</code> setting).</td>
</tr>
<tr>
<td>parameterHintsMultipleSignatures</td>
<td>Multiple parameter hints are displayed.</td>
</tr>
<tr>
<td><strong>Integrated terminal contexts</strong></td>
<td></td>
</tr>
<tr>
<td>terminalFocus</td>
<td>An integrated terminal has focus.</td>
</tr>
<tr>
<td><strong>Global UI contexts</strong></td>
<td></td>
</tr>
<tr>
<td>resourceLangId</td>
<td>True when the Explorer or editor title language Id matches. Example: <code>"resourceLangId == markdown"</code></td>
</tr>
<tr>
<td>globalMessageVisible</td>
<td>Message box is visible at the top of VS Code.</td>
</tr>
<tr>
<td>searchViewletVisible</td>
<td>Search view is open.</td>
</tr>
<tr>
<td>replaceActive</td>
<td>Search view Replace text box is open.</td>
</tr>
</tbody>
</table>
<p>The list above isn't exhaustive and you may see some <code>when</code> contexts for specific VS Code UI in the <code>Default Keyboard Shortcuts</code>.</p>
<h2 id="_removing-a-specific-key-binding-rule" data-needslink="_removing-a-specific-key-binding-rule">Removing a specific key binding rule<a class="hash-link hidden" href="#_removing-a-specific-key-binding-rule">#</a></h2>
<p>You can write a key binding rule that targets the removal of a specific default key binding. With the <code>keybindings.json</code>,
 it was always possible to redefine all the key bindings of VS Code, but
 it can be very difficult to make a small tweak, especially around 
overloaded keys, such as <span class="keybinding">Tab</span> or <span class="keybinding">Escape</span>. To remove a specific key binding, simply add a <code>-</code> to the <code>command</code> and the rule will be a removal rule.</p>
<p>Here is an example:</p>
<pre><code class="json">// In Default Keyboard Shortcuts
...
{ "<span class="hljs-attribute">key</span>": <span class="hljs-value"><span class="hljs-string">"tab"</span></span>, "<span class="hljs-attribute">command</span>": <span class="hljs-value"><span class="hljs-string">"tab"</span></span>, "<span class="hljs-attribute">when</span>": <span class="hljs-value">... </span>},
{ "<span class="hljs-attribute">key</span>": <span class="hljs-value"><span class="hljs-string">"tab"</span></span>, "<span class="hljs-attribute">command</span>": <span class="hljs-value"><span class="hljs-string">"editor.emmet.action.expandAbbreviation"</span></span>, "<span class="hljs-attribute">when</span>": <span class="hljs-value">... </span>},
{ "<span class="hljs-attribute">key</span>": <span class="hljs-value"><span class="hljs-string">"tab"</span></span>, "<span class="hljs-attribute">command</span>": <span class="hljs-value"><span class="hljs-string">"jumpToNextSnippetPlaceholder"</span></span>, "<span class="hljs-attribute">when</span>": <span class="hljs-value">... </span>},
{ "<span class="hljs-attribute">key</span>": <span class="hljs-value"><span class="hljs-string">"tab"</span></span>, "<span class="hljs-attribute">command</span>": <span class="hljs-value"><span class="hljs-string">"acceptQuickFixSuggestion"</span></span>, "<span class="hljs-attribute">when</span>": <span class="hljs-value">... </span>},
{ "<span class="hljs-attribute">key</span>": <span class="hljs-value"><span class="hljs-string">"tab"</span></span>, "<span class="hljs-attribute">command</span>": <span class="hljs-value"><span class="hljs-string">"acceptSelectedSuggestion"</span></span>, "<span class="hljs-attribute">when</span>": <span class="hljs-value">... </span>},
...

// To remove the second rule, for example, add in keybindings.json:
{ "<span class="hljs-attribute">key</span>": <span class="hljs-value"><span class="hljs-string">"tab"</span></span>, "<span class="hljs-attribute">command</span>": <span class="hljs-value"><span class="hljs-string">"-editor.emmet.action.expandAbbreviation"</span> </span>}

</code></pre>
<h2 id="_keyboard-layouts" data-needslink="_keyboard-layouts">Keyboard layouts<a class="hash-link hidden" href="#_keyboard-layouts">#</a></h2>
<blockquote>
<p><strong>Note:</strong> This section relates only to key bindings, not to typing in the editor.</p>
</blockquote>
<p>The keys above are string representations for virtual keys and do not
 necessarily relate to the produced character when they are pressed. 
More precisely:</p>
<ul>
<li>Reference: https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85)</li>
<li><span class="keybinding">tab</span> for <code>VK_TAB</code> (<code>0x09</code>)</li>
<li><span class="keybinding">;</span> for <code>VK_OEM_1</code> (<code>0xBA</code>)</li>
<li><span class="keybinding">=</span> for <code>VK_OEM_PLUS</code> (<code>0xBB</code>)</li>
<li><span class="keybinding">,</span> for <code>VK_OEM_COMMA</code> (<code>0xBC</code>)</li>
<li><span class="keybinding">-</span> for <code>VK_OEM_MINUS</code> (<code>0xBD</code>)</li>
<li><span class="keybinding">.</span> for <code>VK_OEM_PERIOD</code> (<code>0xBE</code>)</li>
<li><span class="keybinding">/</span> for <code>VK_OEM_2</code> (<code>0xBF</code>)</li>
<li><span class="keybinding">`</span> for <code>VK_OEM_3</code> (<code>0xC0</code>)</li>
<li><span class="keybinding">[</span> for <code>VK_OEM_4</code> (<code>0xDB</code>)</li>
<li><span class="keybinding">\</span> for <code>VK_OEM_5</code> (<code>0xDC</code>)</li>
<li><span class="keybinding">]</span> for <code>VK_OEM_6</code> (<code>0xDD</code>)</li>
<li><span class="keybinding">'</span> for <code>VK_OEM_7</code> (<code>0xDE</code>)</li>
<li>etc.</li>
</ul>
<p>Different keyboard layouts usually reposition the above virtual keys 
or change the characters produced when they are pressed. When using a 
different keyboard layout than the standard US, Visual Studio Code does 
the following:</p>
<p>All the key bindings are rendered in the UI using the current system's keyboard layout. For example, <code>Split Editor</code> when using a French (France) keyboard layout is now rendered as <span class="keybinding">Ctrl+*</span>:</p>
<p><img src="01_Visual_Studio_Code_Key_Bindings-Dateien/keybinding_render-key-binding.png" alt="render key binding"></p>
<p>When editing <code>keybindings.json</code>, VS Code highlights 
misleading key bindings - those that are represented in the file with 
the character produced under the standard US keyboard layout, but which 
need pressing keys with different labels under the current system's 
keyboard layout. For example, here is how the <code>Default keybindings</code> rules look like when using a French (France) keyboard layout:</p>
<p><img src="01_Visual_Studio_Code_Key_Bindings-Dateien/keybinding_keybindings-json.png" alt="keybindings.json guidance"></p>
<p>There is also a widget that helps input the key binding rule when editing <code>keybindings.json</code>. To launch the <strong>Define Keybinding</strong> widget, press <span title="OSX: ⌘K ⌘K, Linux: Ctrl+K Ctrl+K" class="dynamic-keybinding keybinding win" data-osx="⌘K ⌘K" data-win="Ctrl+K Ctrl+K" data-linux="Ctrl+K Ctrl+K">Ctrl+K Ctrl+K</span>.
 The widget listens for key presses and renders the serialized JSON 
representation in the text box and below it, the keys that VS Code has 
detected under your current keyboard layout. Once you've typed the key 
combination you want, you can press <span class="keybinding">Enter</span> and a rule snippet will be inserted.</p>
<p><img src="01_Visual_Studio_Code_Key_Bindings-Dateien/keybinding_key-binding-widget.png" alt="key binding widget"></p>
<blockquote>
<p><strong>Note:</strong> Visual Studio Code detects your current 
keyboard layout on start-up and then caches this information. For a good
 experience, we recommend restarting VS Code if you change your keyboard
 layout.</p>
</blockquote>
<h2 id="_next-steps" data-needslink="_next-steps">Next Steps<a class="hash-link hidden" href="#_next-steps">#</a></h2>
<p>Now that you know about our Key binding support, what's next...</p>
<ul>
<li><a href="https://code.visualstudio.com/docs/customization/overview">Customization</a> - Configure Code the way you want - Themes, Settings and more</li>
<li><a href="https://code.visualstudio.com/docs/languages/overview">Language Support</a> - Our Good, Better, Best language grid to see what you can expect</li>
<li><a href="https://code.visualstudio.com/docs/editor/debugging">Debugging</a> - This is where VS Code really shines</li>
<li><a href="https://code.visualstudio.com/docs/runtimes/nodejs">Node.js</a> - End to end Node.js scenario with a sample app</li>
</ul>
<h2 id="_common-questions" data-needslink="_common-questions">Common Questions<a class="hash-link hidden" href="#_common-questions">#</a></h2>
<p><strong>Q: How to find out what command is bound to a specific key?</strong></p>
<p><strong>A:</strong> In the Default Keyboard Shortcuts, open <code>Quick Outline</code> by pressing <span title="OSX: ⇧⌘O, Linux: Ctrl+Shift+O" class="dynamic-keybinding keybinding win" data-osx="⇧⌘O" data-win="Ctrl+Shift+O" data-linux="Ctrl+Shift+O">Ctrl+Shift+O</span></p>
<p><img src="01_Visual_Studio_Code_Key_Bindings-Dateien/keybinding_outline.png" alt="Key bindings quick outline"></p>
<p><strong>Q: How to add a key binding to an action? E.g. Add Ctrl+D to Delete Lines</strong></p>
<p><strong>A:</strong> Find a rule that triggers the action in the Default Keyboard Shortcuts and write a modified version of it in your <code>User/keybindings.json</code> file:</p>
<pre><code class="json">// Original, in Default Keyboard Shortcuts
{ "<span class="hljs-attribute">key</span>": <span class="hljs-value"><span class="hljs-string">"ctrl+shift+k"</span></span>,          "<span class="hljs-attribute">command</span>": <span class="hljs-value"><span class="hljs-string">"editor.action.deleteLines"</span></span>,
                                     "<span class="hljs-attribute">when</span>": <span class="hljs-value"><span class="hljs-string">"editorTextFocus"</span> </span>},
// Modified, in User/keybindings.json, Ctrl+D now will also trigger this action
{ "<span class="hljs-attribute">key</span>": <span class="hljs-value"><span class="hljs-string">"ctrl+d"</span></span>,                "<span class="hljs-attribute">command</span>": <span class="hljs-value"><span class="hljs-string">"editor.action.deleteLines"</span></span>,
                                     "<span class="hljs-attribute">when</span>": <span class="hljs-value"><span class="hljs-string">"editorTextFocus"</span> </span>},
</code></pre>
<p><strong>Q: How can I add a key binding for only certain file types?</strong></p>
<p><strong>A:</strong> Use the <code>editorLangId</code> context key in your <code>when</code> clause:</p>
<pre><code class="json">{ "<span class="hljs-attribute">key</span>": <span class="hljs-value"><span class="hljs-string">"shift+alt+a"</span></span>,           "<span class="hljs-attribute">command</span>": <span class="hljs-value"><span class="hljs-string">"editor.action.blockComment"</span></span>,
                                     "<span class="hljs-attribute">when</span>": <span class="hljs-value"><span class="hljs-string">"editorTextFocus &amp;&amp; editorLangId == csharp"</span> </span>},
</code></pre>
<p><strong>Q: I have modified my key bindings in <code>User/keybindings.json</code>, why don't they work?</strong></p>
<p><strong>A:</strong> The most common problem is a syntax error in the file. Otherwise, try removing the <code>when</code> clause or picking a different <code>key</code>. Unfortunately, at this point, it is a trial and error process.</p>

			<div class="feedback"><div class="widget" data-reactroot=""><form><div class="buttons"><h3>Was this documentation helpful?</h3><br><button value="1"><!-- react-text: 7 -->Yes<!-- /react-text --><span class="sr-only"> , this page was helpful</span></button><button value="0"><!-- react-text: 10 -->No<!-- /react-text --><span class="sr-only"> , this page was not helpful</span></button></div></form></div></div>
			
			<div class="body-footer">Last updated on 8/4/2016</div>
			
		</div>
        <div class="hidden-xs col-sm-3 col-md-2">
            <nav class="affix" id="docs-subnavbar">
				<h4>In this article</h4>
                <ul class="nav">
                	
                		<li class=""><a href="#_basic-editing">Basic Editing</a></li>
                	
                		<li class=""><a href="#_rich-languages-editing">Rich Languages Editing</a></li>
                	
                		<li><a href="#_navigation">Navigation</a></li>
                	
                		<li><a href="#_editorwindow-management">Editor/Window Management</a></li>
                	
                		<li><a href="#_file-management">File Management</a></li>
                	
                		<li><a href="#_display">Display</a></li>
                	
                		<li><a href="#_preferences">Preferences</a></li>
                	
                		<li><a href="#_debug">Debug</a></li>
                	
                		<li><a href="#_tasks">Tasks</a></li>
                	
                		<li><a href="#_extensions">Extensions</a></li>
                	
                		<li><a href="#_customizing-shortcuts">Customizing Shortcuts</a></li>
                	
                		<li><a href="#_keyboard-rules">Keyboard Rules</a></li>
                	
                		<li><a href="#_accepted-keys">Accepted keys</a></li>
                	
                		<li><a href="#_when-clause-contexts">when Clause Contexts</a></li>
                	
                		<li><a href="#_removing-a-specific-key-binding-rule">Removing a specific key binding rule</a></li>
                	
                		<li><a href="#_keyboard-layouts">Keyboard layouts</a></li>
                	
                		<li><a href="#_next-steps">Next Steps</a></li>
                	
                		<li><a href="#_common-questions">Common Questions</a></li>
                	
                </ul>
				<iframe src="01_Visual_Studio_Code_Key_Bindings-Dateien/tweet_button.htm" title="Twitter Tweet Button" style="position: static; visibility: visible; width: 61px; height: 20px;" class="twitter-share-button twitter-share-button-rendered twitter-tweet-button" allowtransparency="true" scrolling="no" id="twitter-widget-1" frameborder="0"></iframe>
			</nav>
        </div>
	</div>
</div>

		</div>

        <meta itemprop="applicationCategory" content="Text Editor">
        <meta itemprop="screenshot" content="http://localhost:7000/home-screenshot-mac-lg.png">
        <meta itemprop="datePublished" content="2016-04-14">
        <meta itemprop="operatingSystem" content="Mac, Linux, Windows">
    </div>
    <footer role="contentinfo">
        <div class="container">
            <div class="row">
                <div class="left col-md-7">
                    <span class="message">Hello from Seattle.</span>
                    <iframe data-screen-name="code" src="01_Visual_Studio_Code_Key_Bindings-Dateien/follow_button.htm" title="Twitter Follow Button" style="position: static; visibility: visible; width: 196px; height: 20px;" class="twitter-follow-button twitter-follow-button-rendered" allowtransparency="true" scrolling="no" id="twitter-widget-0" frameborder="0"></iframe>
                    <div class="github-star-button">
                        <iframe title="GitHub star button" src="01_Visual_Studio_Code_Key_Bindings-Dateien/github-btn.htm" scrolling="0" frameborder="0" height="20px" width="130px"></iframe>
                    </div>
    
                    <script>window.twttr=(function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],t=window.twttr||{};if(d.getElementById(id))return t;js=d.createElement(s);js.id=id;js.src="https://platform.twitter.com/widgets.js";fjs.parentNode.insertBefore(js,fjs);t._e=[];t.ready=function(f){t._e.push(f);};return t;}(document,"script","twitter-wjs"));</script>
                </div>
                <div class="right col-md-5">
                    <ul class="links">
                        <li><a id="footer-support-link" href="https://support.microsoft.com/en-us/assistedsupportproducts" target="_blank">Support</a></li>
                        <li><a id="footer-privacy-link" href="http://www.microsoft.com/privacystatement/en-us/core/default.aspx" target="_blank">Privacy</a></li>
                        <li><a id="footer-terms-link" href="http://www.microsoft.com/en-us/legal/intellectualproperty/copyright/default.aspx" target="_blank">Terms of Use</a></li>
                        <li><a id="footer-license-link" href="https://code.visualstudio.com/License">License</a></li>
                    </ul>
                    <div class="copyright">
                        <a id="footer-microsoft-link" class="logo" href="http://www.microsoft.com/"><img src="01_Visual_Studio_Code_Key_Bindings-Dateien/microsoft-logo.png" alt="Microsoft homepage" height="20"></a>
                        <span>© 2016 <span itemprop="publisher" itemscope="" itemtype="http://schema.org/Organization">
    <span itemprop="name">Microsoft</span></span></span>
                    </div>
                </div>
            </div>
        </div>
    </footer>    <!-- inject:js -->
    <script src="01_Visual_Studio_Code_Key_Bindings-Dateien/vendor.js"></script>
    <script src="01_Visual_Studio_Code_Key_Bindings-Dateien/main.js"></script>
    <!-- endinject -->
    
    <script type="application/ld+json">
        {
            "@context" : "http://schema.org",
            "@type" : "Product",
            "name" : "Visual Studio Code",
            "logo": "https://code.visualstudio.com/Content/images/vscode.ico",
            "url" : "https://code.visualstudio.com",
            "potentialAction": {
              "@type": "SearchAction",
              "target": "https://code.visualstudio.com/Search?q={search_term_string}",
              "query-input": "required name=search_term_string"
            },
            "sameAs" : [
            "https://en.wikipedia.org/wiki/Visual_Studio_Code",
            "https://www.facebook.com/visualstudio",
            "https://twitter.com/code",
            "http://blogs.msdn.com/b/vscode"
            ]
        }
    </script>


<iframe style="position: absolute; visibility: hidden; display: none; width: 0px; height: 0px; padding: 0px; border: medium none;" allowfullscreen="true" allowtransparency="true" scrolling="no" id="rufous-sandbox" frameborder="0"></iframe></body></html>